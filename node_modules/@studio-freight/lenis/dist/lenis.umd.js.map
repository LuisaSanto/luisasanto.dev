{"version":3,"file":"lenis.umd.js","sources":["../src/maths.js","../src/animate.js","../src/dimensions.js","../src/debounce.js","../src/emitter.js","../src/virtual-scroll.js","../src/index.js"],"sourcesContent":["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n","import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, { completed })\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({ wrapper, content, autoResize = true } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      const resize = debounce(this.resize, 250)\r\n\r\n      if (this.wrapper !== window) {\r\n        this.wrapperResizeObserver = new ResizeObserver(resize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(resize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    this.scrollHeight = this.content.scrollHeight\r\n    this.scrollWidth = this.content.scrollWidth\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n","export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","export class Emitter {\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n","import { Emitter } from './emitter'\r\nimport { clamp } from './maths'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      inertia: true,\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\r\n  }\r\n}\r\n","import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explaination\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\nexport default class Lenis {\r\n  // isScrolling = true when scroll is animating\r\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\r\n  // isSmooth = true if scroll should be animated\r\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  /**\r\n   * @typedef {(t: number) => number} EasingFunction\r\n   * @typedef {'vertical' | 'horizontal'} Orientation\r\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\r\n   *\r\n   * @typedef LenisOptions\r\n   * @property {Window | HTMLElement} [wrapper]\r\n   * @property {HTMLElement} [content]\r\n   * @property {Window | HTMLElement} [wheelEventsTarget]\r\n   * @property {boolean} [smoothWheel]\r\n   * @property {boolean} [smoothTouch]\r\n   * @property {boolean} [syncTouch]\r\n   * @property {number} [syncTouchLerp]\r\n   * @property {number} [touchInertiaMultiplier]\r\n   * @property {number} [duration]\r\n   * @property {EasingFunction} [easing]\r\n   * @property {number} [lerp]\r\n   * @property {boolean} [infinite]\r\n   * @property {Orientation} [orientation]\r\n   * @property {GestureOrientation} [gestureOrientation]\r\n   * @property {number} [touchMultiplier]\r\n   * @property {number} [wheelMultiplier]\r\n   * @property {boolean} [normalizeWheel]\r\n   * @property {boolean} [autoResize]\r\n   *\r\n   * @param {LenisOptions}\r\n   */\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper,\r\n    smoothWheel = true,\r\n    smoothTouch = false,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.1,\r\n    __iosNoInertiaSyncTouchLerp = 0.4, // should be 1 but had to leave 0.4 for iOS (testing purpose)\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = duration && 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    normalizeWheel = false,\r\n    autoResize = true,\r\n  } = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      __iosNoInertiaSyncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n      autoResize,\r\n    }\r\n\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    this.rootElement.classList.add('lenis')\r\n\r\n    this.velocity = 0\r\n    this.isStopped = false\r\n    this.isSmooth = smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.rootElement.classList.remove('lenis')\r\n    this.rootElement.classList.remove('lenis-smooth')\r\n    this.rootElement.classList.remove('lenis-scrolling')\r\n    this.rootElement.classList.remove('lenis-stopped')\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\r\n      (i) => callback !== i\r\n    )\r\n  }\r\n\r\n  setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  onVirtualScroll = ({ type, inertia, deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = type === 'touch'\r\n    const isWheel = type === 'wheel'\r\n\r\n    if (\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\r\n      (isTouch &&\r\n        this.options.gestureOrientation === 'vertical' &&\r\n        this.scroll === 0 &&\r\n        !this.options.infinite &&\r\n        deltaY <= 0) // touch pull to refresh\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    if (\r\n      !!event\r\n        .composedPath()\r\n        .find(\r\n          (node) =>\r\n            node?.hasAttribute?.('data-lenis-prevent') ||\r\n            (isTouch && node?.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n            (isWheel && node?.hasAttribute?.('data-lenis-prevent-wheel'))\r\n        )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const hasTouchInertia = isTouch && inertia && Math.abs(delta) > 1\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch && {\r\n        lerp: hasTouchInertia\r\n          ? this.syncTouchLerp\r\n          : this.options.__iosNoInertiaSyncTouchLerp,\r\n      }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  onScroll = () => {\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete = null,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    } = {}\r\n  ) {\r\n    if (this.isStopped && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.emit()\r\n      onComplete?.()\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onUpdate: (value, { completed }) => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        // completed\r\n        if (completed) {\r\n          if (lock) this.isLocked = false\r\n          requestAnimationFrame(() => {\r\n            //avoid double scroll event\r\n            this.isScrolling = false\r\n          })\r\n          this.velocity = 0\r\n          onComplete?.()\r\n        }\r\n\r\n        this.emit()\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? this.options.content\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    if (this.__isSmooth !== value) {\r\n      this.rootElement.classList.toggle('lenis-smooth', value)\r\n      this.__isSmooth = value\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    if (this.__isScrolling !== value) {\r\n      this.rootElement.classList.toggle('lenis-scrolling', value)\r\n      this.__isScrolling = value\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    if (this.__isStopped !== value) {\r\n      this.rootElement.classList.toggle('lenis-stopped', value)\r\n      this.__isStopped = value\r\n    }\r\n  }\r\n}\r\n"],"names":["clamp","min","input","max","Math","Animate","_proto","prototype","advance","deltaTime","_this$onUpdate","x","y","t","this","isRunning","completed","lerp","value","to","exp","round","currentTime","linearProgress","duration","easedProgress","easing","from","onUpdate","call","stop","fromTo","_ref","_ref$lerp","_ref$duration","_ref$easing","Dimensions","_temp","_this","callback","timer","wrapper","content","_ref$autoResize","autoResize","resize","onWrapperResize","onContentResize","window","width","innerWidth","height","innerHeight","clientWidth","clientHeight","scrollHeight","scrollWidth","args","arguments","context","clearTimeout","setTimeout","apply","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","_this$wrapperResizeOb","_this$contentResizeOb","disconnect","_createClass","key","get","Emitter","events","emit","event","callbacks","i","length","slice","on","cb","_this$events$event","push","_this$events$event2","filter","VirtualScroll","element","_ref$wheelMultiplier","wheelMultiplier","_ref$touchMultiplier","touchMultiplier","_ref$normalizeWheel","normalizeWheel","onTouchStart","_ref2","targetTouches","clientY","touchStart","clientX","lastDelta","onTouchMove","_ref3","deltaX","deltaY","emitter","type","onTouchEnd","inertia","onWheel","addEventListener","passive","removeEventListener","Lenis","_ref$wrapper","_ref$content","document","documentElement","_ref$wheelEventsTarge","wheelEventsTarget","_ref$smoothWheel","smoothWheel","_ref$smoothTouch","smoothTouch","_ref$syncTouch","syncTouch","_ref$syncTouchLerp","syncTouchLerp","_ref$__iosNoInertiaSy","__iosNoInertiaSyncTouchLerp","_ref$touchInertiaMult","touchInertiaMultiplier","pow","_ref$infinite","infinite","_ref$orientation","orientation","_ref$gestureOrientati","gestureOrientation","onVirtualScroll","ctrlKey","isTouch","isWheel","options","scroll","composedPath","find","node","hasAttribute","isStopped","isLocked","preventDefault","isSmooth","isScrolling","animate","delta","abs","hasTouchInertia","velocity","scrollTo","targetScroll","_extends","programmatic","onScroll","lastScroll","animatedScroll","actualScroll","direction","sign","lenisVersion","body","dimensions","rootElement","classList","add","virtualScroll","remove","off","_this$emitter$events$","setScroll","isHorizontal","scrollLeft","scrollTop","reset","start","raf","time","target","_temp2","_this2","_ref3$offset","offset","_ref3$immediate","immediate","_ref3$lock","lock","_ref3$duration","_ref3$easing","_ref3$lerp","_ref3$onComplete","onComplete","_ref3$force","force","_ref3$programmatic","includes","limit","_target","querySelector","nodeType","wrapperRect","getBoundingClientRect","left","top","rect","_ref4","requestAnimationFrame","d","__isSmooth","set","toggle","__isScrolling","__isStopped"],"mappings":"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"}