{"version":3,"file":"locomotive-scroll.modern.mjs","sources":["../src/core/IO.ts","../src/utils/maths.ts","../src/core/ScrollElement.ts","../src/core/Core.ts","../src/core/RO.ts","../src/index.ts"],"sourcesContent":["/**\n * Intersection Observer\n *\n * Detecting visibility of an element in the viewport.\n *\n * Features functions to:\n *\n * - Trigger inview/outOfView callbacks\n * - If the element has a requestAnimationFrame dependency, set interactivy status for the ScrollElement Class\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API}\n */\n\nimport { IIOOptions } from '../types';\nimport ScrollElement from './ScrollElement';\n\nexport default class IO {\n    public scrollElements: ScrollElement[];\n    private rootMargin: string;\n    private IORaf: boolean;\n    private observer!: IntersectionObserver;\n\n    constructor({\n        scrollElements,\n        rootMargin = '-1px -1px -1px -1px',\n        IORaf,\n    }: IIOOptions) {\n        // Parameters\n        this.scrollElements = scrollElements;\n        this.rootMargin = rootMargin;\n        this.IORaf = IORaf;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Intersection Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Options\n        const observerOptions = {\n            rootMargin: this.rootMargin,\n        };\n\n        // Callback\n        const onIntersect = (entries: IntersectionObserverEntry[]) => {\n            entries.forEach((entry) => {\n                const $targetItem: ScrollElement | undefined =\n                    this.scrollElements.find(\n                        (item) => item.$el === entry.target\n                    );\n\n                if (entry.isIntersecting) {\n                    $targetItem && ($targetItem.isAlreadyIntersected = true);\n                    this._setInview(entry);\n                } else if ($targetItem && $targetItem.isAlreadyIntersected) {\n                    this._setOutOfView(entry);\n                }\n            });\n        };\n\n        // Instance\n        this.observer = new IntersectionObserver(onIntersect, observerOptions);\n\n        // Observe each default elements\n        for (const scrollElement of this.scrollElements) {\n            const $scrollElement = scrollElement.$el;\n            this.observe($scrollElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Intersection Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n\n    /**\n     * Subscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to observe.\n     */\n    public observe($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.observe($scrollElement);\n    }\n\n    /**\n     * Unsubscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to unobserve.\n     */\n    public unobserve($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.unobserve($scrollElement);\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger inview callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setInview(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOn();\n        !this.IORaf && scrollElement?.setInview();\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger out of view callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setOutOfView(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOff();\n        !this.IORaf && scrollElement?.setOutOfView();\n\n        // Unobserve if element doesn't have repeat attribute\n        if (!scrollElement?.attributes.scrollRepeat && !this.IORaf) {\n            this.unobserve(entry.target as HTMLElement);\n        }\n    }\n}\n","// https://greensock.com/docs/v3/GSAP/gsap.utils\n\n/**\n * Clamp a value to fit within a specific range (ex: clamp(0, 100, -12) --> 0).\n *\n * @param {number} min   - Minimum value expected.\n * @param {number} max   - Maximum value expected.\n * @param {number} value - Current value.\n *\n * @returns {number} - Clamped value.\n */\nexport function clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n}\n\n/**\n * Map one range to another (ex: mapRange(-10, 10, 0, 100, 5) --> 75).\n *\n * @param {number} inMin  - Current minimum value.\n * @param {number} inMax  - Current maximum value.\n * @param {number} outMin - Maximum value expected.\n * @param {number} outMax - Maximum value expected.\n * @param {number} value  - Current value.\n *\n * @returns {number} - New value that should be between minimum value expected and maximum value.\n */\nexport function mapRange(\n    inMin: number,\n    inMax: number,\n    outMin: number,\n    outMax: number,\n    value: number\n): number {\n    const inRange = inMax - inMin;\n    const outRange = outMax - outMin;\n    return outMin + (((value - inMin) / inRange) * outRange || 0);\n}\n\n/**\n * Map a number within a range to a progress between 0 to 1 (ex: normalize(100, 200, 150) --> 0.5).\n *\n * @param {number} min   - Current minimum value.\n * @param {number} max   - Current maximum value.\n * @param {number} value - Current value.\n *\n * @returns {number} - New value that should be between 0 and 1.\n */\nexport function normalize(min: number, max: number, value: number): number {\n    return mapRange(min, max, 0, 1, value);\n}\n\n/**\n * Get closest number from an array.\n *\n * @param {number[]} array  - Numbers array.\n * @param {number}   target - Reference value.\n *\n * @returns {number} - Closest number.\n */\nexport function closestNumber(array: number[], target: number): number {\n    return array.reduce((prev, curr) => {\n        return Math.abs(curr - target) < Math.abs(prev - target) ? curr : prev;\n    });\n}\n","/**\n * Scroll Element\n *\n * Give tools to compute element progress in the viewport and triggers callbacks to animate it.\n *\n * Features functions to:\n *\n * - scrollClass - Add a custom class when the element is intersected by the offset\n * - scrollOffset - Determine offsets to intersect the element\n * - scrollPosition - Determine the element positions to consider an element as intersected.\n * - scrollModuleProgress - Send scroll progress to modular module that have a specific method (PROGRESS_MODULAR_METHOD)\n * - scrollCssProgress - Add a specific css variable (PROGRESS_CSS_VAR) that store the scroll progress\n * - scrollEventProgress - Send scroll progress to custom event listeners.\n * - scrollSpeed - Add a scroll multiplicator to create a parallax effect\n * - scrollRepeat - Repeat the option to trigger animation each time the element is intersected\n * - scrollCall - Call a custom event or a modular callback when the element is intersected\n */\n\nimport {\n    IModular,\n    IScrollElementOptions,\n    IScrollElementAttributes,\n    IScrollElementIntersection,\n    IScrollElementMetrics,\n    IProgressModularModules,\n    IScrollElementCallbacksValues,\n    scrollCallWay,\n    scrollCallFrom,\n    scrollOrientation,\n} from '../types';\nimport { clamp, closestNumber, normalize, mapRange } from '../utils/maths';\n\n/** Constants */\nconst INVIEW_CLASS = 'is-inview';\nconst PROGRESS_CSS_VAR = '--progress';\nconst PROGRESS_MODULAR_METHOD = 'onScrollProgress';\n\nexport default class ScrollElement {\n    public $el: HTMLElement;\n    public id: number;\n    public needRaf: boolean;\n    public attributes: IScrollElementAttributes;\n    public scrollOrientation: scrollOrientation;\n    public isAlreadyIntersected: boolean;\n\n    private intersection: IScrollElementIntersection;\n    private metrics: IScrollElementMetrics;\n    private currentScroll: number;\n    private translateValue: number;\n    private progress: number;\n    private lastProgress: number | null;\n    private modularInstance?: IModular;\n    private progressModularModules: IProgressModularModules[];\n    private isInview: boolean;\n    private isInteractive: boolean;\n    private isInFold: boolean;\n    private isFirstResize: boolean;\n\n    private subscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n    private unsubscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n\n    constructor({\n        $el,\n        id,\n        modularInstance,\n        subscribeElementUpdateFn,\n        unsubscribeElementUpdateFn,\n        needRaf,\n        scrollOrientation,\n    }: IScrollElementOptions) {\n        // Scroll DOM element\n        this.$el = $el;\n        // Unique ID\n        this.id = id;\n        // RAF option\n        this.needRaf = needRaf;\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n        // Modular.js\n        this.modularInstance = modularInstance;\n        // Parent's callbacks\n        this.subscribeElementUpdateFn = subscribeElementUpdateFn;\n        this.unsubscribeElementUpdateFn = unsubscribeElementUpdateFn;\n\n        // Attributes\n        this.attributes = {\n            scrollClass: this.$el.dataset['scrollClass'] ?? INVIEW_CLASS,\n            scrollOffset: this.$el.dataset['scrollOffset'] ?? '0,0',\n            scrollPosition: this.$el.dataset['scrollPosition'] ?? 'start,end',\n            scrollModuleProgress:\n                this.$el.dataset['scrollModuleProgress'] != null,\n            scrollCssProgress: this.$el.dataset['scrollCssProgress'] != null,\n            scrollEventProgress:\n                this.$el.dataset['scrollEventProgress'] ?? null,\n            scrollSpeed:\n                this.$el.dataset['scrollSpeed'] != null\n                    ? parseFloat(this.$el.dataset['scrollSpeed'])\n                    : null,\n            scrollRepeat: this.$el.dataset['scrollRepeat'] != null,\n            scrollCall: this.$el.dataset['scrollCall'] ?? null,\n            scrollCallSelf: this.$el.dataset['scrollCallSelf'] != null,\n            scrollIgnoreFold: this.$el.dataset['scrollIgnoreFold'] != null,\n            scrollEnableTouchSpeed:\n                this.$el.dataset['scrollEnableTouchSpeed'] != null,\n        };\n\n        // Limits\n        this.intersection = {\n            start: 0,\n            end: 0,\n        };\n\n        // Metrics\n        this.metrics = {\n            offsetStart: 0,\n            offsetEnd: 0,\n            bcr: {} as DOMRect,\n        };\n\n        // Scroll Values\n        this.currentScroll =\n            this.scrollOrientation === 'vertical'\n                ? window.scrollY\n                : window.scrollX;\n\n        // Parallax\n        this.translateValue = 0;\n\n        // Progress\n        this.progress = 0;\n        this.lastProgress = null;\n        this.progressModularModules = [];\n\n        // Inview\n        this.isInview = false;\n        this.isInteractive = false;\n        this.isAlreadyIntersected = false;\n        this.isInFold = false;\n        this.isFirstResize = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize progress tracking.\n     *\n     * @private\n     */\n    private _init() {\n        if (!this.needRaf) {\n            return;\n        }\n\n        // Prepare modules progress\n        if (this.modularInstance && this.attributes.scrollModuleProgress) {\n            this._getProgressModularModules();\n        }\n\n        // First resize to compute all values\n        this._resize();\n    }\n\n    /**\n     * Callback - Resize callback\n     */\n    public onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        this.currentScroll = currentScroll;\n        this._resize();\n    }\n\n    /**\n     * Callback - RAF callback\n     */\n    public onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        this.currentScroll = currentScroll;\n        this._computeProgress();\n\n        // Parallax\n        if (\n            this.attributes.scrollSpeed &&\n            !isNaN(this.attributes.scrollSpeed)\n        ) {\n            // if touch detected or smooth disabled\n            if (!this.attributes.scrollEnableTouchSpeed && !smooth) {\n                if (this.translateValue) {\n                    this.$el.style.transform = `translate3d(0, 0, 0)`;\n                }\n                this.translateValue = 0;\n\n                // if mousewheel or smooth enabled\n            } else {\n                // Check fold condition\n                if (this.isInFold) {\n                    const progress = Math.max(0, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                } else {\n                    const progress = mapRange(0, 1, -1, 1, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                }\n\n                this.$el.style.transform =\n                    this.scrollOrientation === 'vertical'\n                        ? `translate3d(0, ${this.translateValue}px, 0)`\n                        : `translate3d(${this.translateValue}px, 0, 0)`;\n            }\n        }\n    }\n\n    /**\n     * Inview callback\n     */\n    public setInview() {\n        if (this.isInview) {\n            return;\n        }\n\n        this.isInview = true;\n        this.$el.classList.add(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'enter';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Out of view callback\n     */\n    public setOutOfView() {\n        if (!(this.isInview && this.attributes.scrollRepeat)) {\n            return;\n        }\n\n        this.isInview = false;\n        this.$el.classList.remove(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'leave';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Switch interactivity on to subscribe the instance to the RAF\n     * and start calculations.\n     */\n    public setInteractivityOn() {\n        if (this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = true;\n        this.subscribeElementUpdateFn(this);\n    }\n\n    /**\n     * Switch interactivity off to unsubscribe the instance to the RAF\n     * and stop calculations.\n     */\n    public setInteractivityOff() {\n        if (!this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = false;\n        this.unsubscribeElementUpdateFn(this);\n\n        // Force progress to progress limit when the element is out\n        this.lastProgress != null &&\n            this._computeProgress(closestNumber([0, 1], this.lastProgress));\n    }\n\n    /**\n     * Resize method that compute the element's values.\n     *\n     * @private\n     */\n    private _resize() {\n        this.metrics.bcr = this.$el.getBoundingClientRect();\n        this._computeMetrics();\n        this._computeIntersection();\n\n        // First resize logic\n        if (this.isFirstResize) {\n            this.isFirstResize = false;\n            // Dispatch default call if the element is in fold.\n            if (this.isInFold) {\n                this.setInview();\n            }\n        }\n    }\n\n    /**\n     * Compute element's offsets and determine if the element is in fold.\n     *\n     * @private\n     */\n    private _computeMetrics() {\n        const { top, left, height, width } = this.metrics.bcr;\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        const metricsStart = this.scrollOrientation === 'vertical' ? top : left;\n        const metricsSize =\n            this.scrollOrientation === 'vertical' ? height : width;\n\n        this.metrics.offsetStart =\n            this.currentScroll + metricsStart - this.translateValue;\n        this.metrics.offsetEnd = this.metrics.offsetStart + metricsSize;\n\n        if (\n            this.metrics.offsetStart < wSize &&\n            !this.attributes.scrollIgnoreFold\n        ) {\n            this.isInFold = true;\n        } else {\n            this.isInFold = false;\n        }\n    }\n\n    /**\n     * Compute intersection values depending on the context.\n     *\n     * @private\n     */\n    private _computeIntersection() {\n        // Window size\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n\n        // Metrics size\n        const metricsSize =\n            this.scrollOrientation === 'vertical'\n                ? this.metrics.bcr.height\n                : this.metrics.bcr.width;\n\n        // Offset\n        const offset = this.attributes.scrollOffset.split(',');\n        const offsetStart = offset[0] != undefined ? offset[0].trim() : '0';\n        const offsetEnd = offset[1] != undefined ? offset[1].trim() : '0';\n\n        // Positions\n        const scrollPosition = this.attributes.scrollPosition.split(',');\n        let scrollPositionStart =\n            scrollPosition[0] != undefined ? scrollPosition[0].trim() : 'start';\n        const scrollPositionEnd =\n            scrollPosition[1] != undefined ? scrollPosition[1].trim() : 'end';\n\n        // Viewport\n        const viewportStart = offsetStart.includes('%')\n            ? wSize * parseInt(offsetStart.replace('%', '').trim()) * 0.01\n            : parseInt(offsetStart);\n        const viewportEnd = offsetEnd.includes('%')\n            ? wSize * parseInt(offsetEnd.replace('%', '').trim()) * 0.01\n            : parseInt(offsetEnd);\n\n        // Fold exception\n        if (this.isInFold) {\n            scrollPositionStart = 'fold';\n        }\n\n        // Define Intersection Start\n        switch (scrollPositionStart) {\n            case 'start':\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n\n            case 'middle':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize;\n                break;\n\n            case 'fold':\n                this.intersection.start = 0;\n                break;\n\n            default:\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n        }\n\n        // Define Intersection End\n        switch (scrollPositionEnd) {\n            case 'start':\n                this.intersection.end = this.metrics.offsetStart - viewportEnd;\n                break;\n\n            case 'middle':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n\n            default:\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n        }\n\n        // Avoid to have the end < the start intersection >\n        if (this.intersection.end <= this.intersection.start) {\n            switch (scrollPositionEnd) {\n                case 'start':\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n\n                case 'middle':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize * 0.5;\n                    break;\n\n                case 'end':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize;\n                    break;\n\n                default:\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Compute the scroll progress of the element depending\n     * on its intersection values.\n     *\n     * @private\n     *\n     * @param {number} [forcedProgress] - Value to force progress.\n     */\n    private _computeProgress(forcedProgress?: number) {\n        // Progress\n        const progress =\n            forcedProgress ??\n            clamp(\n                0,\n                1,\n                normalize(\n                    this.intersection.start,\n                    this.intersection.end,\n                    this.currentScroll\n                )\n            );\n\n        this.progress = progress;\n\n        if (progress != this.lastProgress) {\n            this.lastProgress = progress;\n\n            // Set the element's progress to the css variable\n            this.attributes.scrollCssProgress && this._setCssProgress(progress);\n\n            // Set the element's progress to the custom event listeners\n            this.attributes.scrollEventProgress &&\n                this._setCustomEventProgress(progress);\n\n            // Set the element's progress to inline modules\n            if (this.attributes.scrollModuleProgress) {\n                for (const modularModules of this.progressModularModules) {\n                    this.modularInstance &&\n                        this.modularInstance.call(\n                            PROGRESS_MODULAR_METHOD,\n                            progress,\n                            modularModules.moduleName,\n                            modularModules.moduleId\n                        );\n                }\n            }\n\n            // Logic to trigger the inview/out of view callbacks\n            progress > 0 && progress < 1 && this.setInview();\n            progress === 0 && this.setOutOfView();\n            progress === 1 && this.setOutOfView();\n        }\n    }\n\n    /**\n     * Set the element's progress to a specific css variable.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCssProgress(currentProgress = 0) {\n        this.$el.style.setProperty(\n            PROGRESS_CSS_VAR,\n            currentProgress.toString()\n        );\n    }\n\n    /**\n     * Set the element's progress to the custom event listeners.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCustomEventProgress(currentProgress = 0) {\n        const customEventName = this.attributes.scrollEventProgress;\n\n        if (!customEventName) return;\n\n        const customEvent = new CustomEvent(customEventName, {\n            detail: {\n                target: this.$el,\n                progress: currentProgress,\n            },\n        });\n        window.dispatchEvent(customEvent);\n    }\n\n    /**\n     * Get modular modules that can listen the element's progress.\n     *\n     * @private\n     */\n    _getProgressModularModules() {\n        if (!this.modularInstance) {\n            return;\n        }\n\n        const modulesIdNames = Object.keys(this.$el.dataset).filter((key) =>\n            key.includes('module')\n        );\n        const modules: any[] = Object.entries(this.modularInstance.modules);\n\n        if (!modulesIdNames.length) {\n            return;\n        }\n\n        for (const modulesIdName of modulesIdNames) {\n            const moduleId = this.$el.dataset[modulesIdName];\n\n            if (!moduleId) {\n                return;\n            }\n\n            for (const module of modules) {\n                const [moduleName, moduleObj] = module;\n\n                if (moduleId in moduleObj) {\n                    this.progressModularModules.push({\n                        moduleName,\n                        moduleId,\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Function to get scroll call from.\n     *\n     * @private\n     */\n    _getScrollCallFrom(): scrollCallFrom {\n        const closestIntersectionValue = closestNumber(\n            [this.intersection.start, this.intersection.end],\n            this.currentScroll\n        );\n        return this.intersection.start === closestIntersectionValue\n            ? 'start'\n            : 'end';\n    }\n\n    /**\n     * Function to dispatch a custom event or call a modular callback.\n     *\n     * @private\n     *\n     * @param {scrollCallWay} way - Enter or leave.\n     * @param {scrollCallFrom} from - Start or end.\n     */\n    _dispatchCall(way: scrollCallWay, from: scrollCallFrom) {\n        const callParameters = this.attributes.scrollCall?.split(',');\n        const callSelf = this.attributes?.scrollCallSelf;\n\n        if (callParameters && callParameters.length > 1) {\n            // Using Modular.js (https://github.com/modularorg/modularjs)\n            const [func, moduleName, moduleId] = callParameters;\n            let targetModuleId;\n\n            // If the module is set on the scroll element\n            if (callSelf) {\n                targetModuleId = this.$el.dataset[`module${moduleName.trim()}`];\n            } else {\n                targetModuleId = moduleId;\n            }\n\n            this.modularInstance &&\n                this.modularInstance.call(\n                    func.trim(),\n                    {\n                        target: this.$el,\n                        way,\n                        from,\n                    },\n                    moduleName.trim(),\n                    targetModuleId?.trim()\n                );\n        } else if (callParameters) {\n            // Using CustomEvent API (https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent)\n            const [customEventName] = callParameters;\n            const customEvent = new CustomEvent(customEventName, {\n                detail: {\n                    target: this.$el,\n                    way,\n                    from,\n                },\n            });\n            window.dispatchEvent(customEvent);\n        }\n    }\n}\n","/**\n * Integrates Lenis with Locomotive's built-in animation system\n */\n\nimport {\n    CoreOptions,\n    IModular,\n    IScrollElementCallbacksValues,\n    scrollOrientation,\n} from '../types';\nimport IO from './IO';\nimport ScrollElement from './ScrollElement';\n\n/** Defined attributes that need a requestAnimationFrame */\nconst ATTRIBUTES_THAT_NEED_RAF = [\n    'scrollOffset',\n    'scrollPosition',\n    'scrollModuleProgress',\n    'scrollCssProgress',\n    'scrollEventProgress',\n    'scrollSpeed',\n];\n\n/** Default root margins */\nconst TRIGGER_ROOT_MARGIN = '-1px -1px -1px -1px';\nconst RAF_ROOT_MARGIN = '100% 100% 100% 100%'; // Add 100vh top/bottom && 100vw left/right to use a biggest value with data-scroll-speed\n\nexport default class Core {\n    private $scrollContainer!: HTMLElement;\n    private modularInstance?: IModular;\n    private triggerRootMargin!: string;\n    private rafRootMargin!: string;\n    private scrollElements!: ScrollElement[];\n    private triggeredScrollElements!: ScrollElement[];\n    private RAFScrollElements!: ScrollElement[];\n    private scrollElementsToUpdate!: ScrollElement[];\n    private IOTriggerInstance!: IO;\n    private IORafInstance!: IO;\n    private scrollOrientation!: scrollOrientation;\n\n    constructor({\n        $el,\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        scrollOrientation,\n    }: CoreOptions) {\n        if (!$el) {\n            console.error('Please provide a DOM Element as scrollContainer');\n            return;\n        }\n\n        // Scroll container\n        this.$scrollContainer = $el;\n\n        // Modular.js\n        this.modularInstance = modularInstance;\n\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n\n        // IO Margins\n        this.triggerRootMargin = triggerRootMargin ?? TRIGGER_ROOT_MARGIN;\n        this.rafRootMargin = rafRootMargin ?? RAF_ROOT_MARGIN;\n\n        // ScrollElements arrays\n        this.scrollElements = [];\n        this.triggeredScrollElements = [];\n        this.RAFScrollElements = [];\n        this.scrollElementsToUpdate = [];\n\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize the core.\n     *\n     * @private\n     */\n    private _init() {\n        const $scrollElements =\n            this.$scrollContainer.querySelectorAll('[data-scroll]');\n\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements($scrollElementsArr);\n\n        // Trigger IO\n        this.IOTriggerInstance = new IO({\n            scrollElements: [...this.triggeredScrollElements],\n            rootMargin: this.triggerRootMargin,\n            IORaf: false,\n        });\n\n        // Raf IO\n        this.IORafInstance = new IO({\n            scrollElements: [...this.RAFScrollElements],\n            rootMargin: this.rafRootMargin,\n            IORaf: true,\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy core.\n     */\n    public destroy() {\n        this.IOTriggerInstance.destroy();\n        this.IORafInstance.destroy();\n        this._unsubscribeAllScrollElements();\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.RAFScrollElements) {\n            scrollElement.onResize({\n                currentScroll,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Callback - RAF callback.\n     */\n    onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.scrollElementsToUpdate) {\n            scrollElement.onRender({\n                currentScroll,\n                smooth,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Remove items from lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $oldContainer - HTMLElement that contains data-scroll elements to unsubscribe\n     */\n    removeScrollElements($oldContainer: HTMLElement) {\n        const $scrollElementsToRemove =\n            $oldContainer.querySelectorAll('[data-scroll]');\n\n        if (!$scrollElementsToRemove.length) return;\n\n        // 1. Remove from IO\n        for (let index = 0; index < this.triggeredScrollElements.length; index++) {\n            const scrollElement = this.triggeredScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IOTriggerInstance.unobserve(scrollElement.$el);\n                this.triggeredScrollElements.splice(index, 1);\n            }\n        }\n\n        for (let index = 0; index < this.RAFScrollElements.length; index++) {\n            const scrollElement = this.RAFScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IORafInstance.unobserve(scrollElement.$el);\n                this.RAFScrollElements.splice(index, 1);\n            }\n        }\n\n        // 2. Remove from scrollElementsToUpdate[] and scrollElements[]\n        $scrollElementsToRemove.forEach(($scrollElement) => {\n            const targetScrollElementToUpdate =\n                this.scrollElementsToUpdate.find(\n                    (scrollElement) => scrollElement.$el === $scrollElement\n                );\n            const targetScrollElement = this.scrollElements.find(\n                (scrollElement) => scrollElement.$el === $scrollElement\n            );\n\n            if (targetScrollElementToUpdate) {\n                this._unsubscribeElementUpdate(targetScrollElementToUpdate);\n            }\n            if (targetScrollElement) {\n                this.scrollElements = this.scrollElements.filter(\n                    (scrollElementItem) =>\n                        scrollElementItem.id != targetScrollElement.id\n                );\n            }\n        });\n    }\n\n    /**\n     * Add items to lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $newContainer - HTMLElement that contains data-scroll elements to subscribe\n     */\n    addScrollElements($newContainer: HTMLElement) {\n        // 3. Rebuild ScrollElements\n        const $scrollElements = $newContainer.querySelectorAll('[data-scroll]');\n\n        // 4. Get max scrollElement.id\n        const ids: number[] = [];\n        this.scrollElements.forEach((scrollElement) => {\n            ids.push(scrollElement.id);\n        });\n        const maxID = Math.max(...ids);\n        const fromIndex = maxID + 1;\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements(\n            $scrollElementsArr,\n            fromIndex,\n            true\n        );\n    }\n\n    /**\n     * Create a ScrollElement instance for each elements with\n     * `data-scroll` attribute.\n     *\n     * @private\n     *\n     * @param {HTMLElement[]} $scrollElements - List of elements that need\n     *     to be regarded.\n     */\n    _subscribeScrollElements(\n        $scrollElements: HTMLElement[],\n        fromIndex = 0,\n        toObserve = false\n    ) {\n        // For each scroll element create a ScrollElement instance\n        for (let index = 0; index < $scrollElements.length; index++) {\n            const $scrollElement = $scrollElements[index];\n            const needRaf = this._checkRafNeeded($scrollElement);\n\n            const scrollElementInstance = new ScrollElement({\n                $el: $scrollElement,\n                id: fromIndex + index,\n                scrollOrientation: this.scrollOrientation,\n                modularInstance: this.modularInstance,\n                subscribeElementUpdateFn:\n                    this._subscribeElementUpdate.bind(this),\n                unsubscribeElementUpdateFn:\n                    this._unsubscribeElementUpdate.bind(this),\n                needRaf,\n            });\n\n            // Push to common array\n            this.scrollElements.push(scrollElementInstance);\n\n            // Push to specific array\n            if (needRaf) {\n                this.RAFScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IORafInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IORafInstance.observe(scrollElementInstance.$el);\n                }\n            } else {\n                this.triggeredScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IOTriggerInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IOTriggerInstance.observe(scrollElementInstance.$el);\n                }\n            }\n        }\n    }\n\n    /**\n     * Clear all ScrollElement arrays.\n     *\n     * @private\n     */\n    _unsubscribeAllScrollElements() {\n        this.scrollElements = [];\n        this.RAFScrollElements = [];\n        this.triggeredScrollElements = [];\n        this.scrollElementsToUpdate = [];\n    }\n\n    /**\n     * Subscribe ScrollElement instance that needs to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - ScrollElement instance inview\n     *     that needs to be updated.\n     */\n    _subscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate.push(scrollElement);\n    }\n\n    /**\n     * Unscribe ScrollElement instance that doesn't need to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - The updated ScrollElement instance\n     *     out of view now.\n     */\n    _unsubscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate = this.scrollElementsToUpdate.filter(\n            (scrollElementToUpdate) =>\n                scrollElementToUpdate.id != scrollElement.id\n        );\n    }\n\n    /**\n     * Check if a DOM Element need a requestAnimationFrame to be used.\n     *\n     * @private\n     *\n     * @param {HTMLElement} $scrollElement - The element that needs to be checked.\n     *\n     * @returns {boolean}\n     */\n    _checkRafNeeded($scrollElement: HTMLElement) {\n        let attributesThatNeedRaf = [...ATTRIBUTES_THAT_NEED_RAF];\n\n        // Remove utils\n        const removeAttribute = (attributeToRemove: string) => {\n            attributesThatNeedRaf = attributesThatNeedRaf.filter(\n                (attribute) => attribute != attributeToRemove\n            );\n        };\n\n        // 1. Check scroll offset values\n        if ($scrollElement.dataset.scrollOffset) {\n            const value = $scrollElement.dataset.scrollOffset\n                .split(',')\n                .map((test) => test.replace('%', '').trim())\n                .join(',');\n            if (value != '0,0') {\n                return true;\n            } else {\n                removeAttribute('scrollOffset');\n            }\n        } else {\n            removeAttribute('scrollOffset');\n        }\n\n        // 2. Check scroll position values\n        if ($scrollElement.dataset.scrollPosition) {\n            const value = $scrollElement.dataset.scrollPosition.trim();\n            if (value != 'top,bottom') {\n                return true;\n            } else {\n                removeAttribute('scrollPosition');\n            }\n        } else {\n            removeAttribute('scrollPosition');\n        }\n\n        // 3. Check scroll speed values\n        if (\n            $scrollElement.dataset.scrollSpeed &&\n            !isNaN(parseFloat($scrollElement.dataset.scrollSpeed))\n        ) {\n            return true;\n        } else {\n            removeAttribute('scrollSpeed');\n        }\n\n        // 4. Check others attributes\n        for (const attribute of attributesThatNeedRaf) {\n            if (attribute in $scrollElement.dataset) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/**\n * Resize Observer\n *\n * The Resize Observer API provides a performant mechanism by which code can monitor an element for changes to its size,\n * with notifications being delivered to the observer each time the size changes.\n *\n * Features functions to:\n *\n * - Trigger the resize callback if the specified element's size change.\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Resize_Observer_API}\n */\n\nimport { IROOptions } from '../types';\n\nexport default class RO {\n    private $resizeElements: HTMLElement[];\n    private isFirstObserve: boolean;\n    private observer!: ResizeObserver;\n    private resizeCallback: () => void;\n\n    constructor({ resizeElements, resizeCallback = () => {} }: IROOptions) {\n        // Parameters\n        this.$resizeElements = resizeElements;\n        this.resizeCallback = resizeCallback;\n\n        // Flags\n        this.isFirstObserve = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Resize Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Callback\n        const onResize = (entries: ResizeObserverEntry[]) => {\n            !this.isFirstObserve && this.resizeCallback?.();\n            this.isFirstObserve = false;\n        };\n\n        // Instance\n        this.observer = new ResizeObserver(onResize);\n\n        // Observe each default elements\n        for (const $resizeElement of this.$resizeElements) {\n            this.observer.observe($resizeElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Resize Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n}\n","//@ts-ignore\nimport Lenis from '@studio-freight/lenis';\nimport Core from './core/Core';\nimport RO from './core/RO';\nimport {\n    ILenisOptions,\n    ILenisScrollToOptions,\n    ILenisScrollValues,\n    ILocomotiveScrollOptions,\n    IModular,\n    lenisTargetScrollTo,\n} from './types';\n\n/**\n * @type {ILenisOptions}\n */\nconst defaultLenisOptions: ILenisOptions = {\n    wrapper: window,\n    content: document.documentElement,\n    lerp: 0.1,\n    duration: 1.2,\n    orientation: 'vertical',\n    gestureOrientation: 'vertical',\n    smoothWheel: true,\n    smoothTouch: false,\n    wheelMultiplier: 1,\n    touchMultiplier: 2,\n    normalizeWheel: true,\n    easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)), // https://www.desmos.com/calculator/brs54l4xou\n};\n\n/**\n * Locomotive Scroll\n *\n * Detection of elements in viewport & smooth scrolling with parallax.\n *\n * Inspired by\n * {@link https://github.com/locomotivemtl/locomotive-scroll locomotive-scroll.js}\n * and built around\n * {@link https://github.com/studio-freight/lenis lenis.js}.\n */\n\nexport default class LocomotiveScroll {\n    public rafPlaying: boolean;\n\n    private lenisInstance: any;\n    private coreInstance: any;\n\n    private lenisOptions: ILenisOptions;\n    private modularInstance?: IModular;\n    private triggerRootMargin?: string;\n    private rafRootMargin?: string;\n    private rafInstance?: any;\n    private autoResize?: boolean;\n    private autoStart?: boolean;\n    private ROInstance?: RO;\n    private scrollCallback?(scrollValues: ILenisScrollValues): void;\n    private initCustomTicker?: (render: () => void) => void;\n    private destroyCustomTicker?: (render: () => void) => void;\n    private _onRenderBind: () => void;\n    private _onResizeBind: () => void;\n    private _onScrollToBind: (event: MouseEvent) => void;\n\n    constructor({\n        lenisOptions = {},\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        autoResize = true,\n        autoStart = true,\n        scrollCallback = () => {},\n        initCustomTicker,\n        destroyCustomTicker,\n    }: ILocomotiveScrollOptions = {}) {\n        // Arguments\n        this.lenisOptions = { ...defaultLenisOptions, ...lenisOptions };\n\n        Object.assign(this, {\n            lenisOptions,\n            modularInstance,\n            triggerRootMargin,\n            rafRootMargin,\n            autoResize,\n            autoStart,\n            scrollCallback,\n            initCustomTicker,\n            destroyCustomTicker,\n        });\n\n        // Binding\n        this._onRenderBind = this._onRender.bind(this);\n        this._onScrollToBind = this._onScrollTo.bind(this);\n        this._onResizeBind = this._onResize.bind(this);\n\n        // Data\n        this.rafPlaying = false;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize instance.\n     *\n     * @private\n     */\n    private _init(): void {\n        // Create Lenis instance\n        this.lenisInstance = new Lenis({\n            wrapper: this.lenisOptions.wrapper,\n            content: this.lenisOptions.content,\n            lerp: this.lenisOptions.lerp,\n            duration: this.lenisOptions.duration,\n            orientation: this.lenisOptions.orientation,\n            gestureOrientation: this.lenisOptions.gestureOrientation,\n            smoothWheel: this.lenisOptions.smoothWheel,\n            smoothTouch: this.lenisOptions.smoothTouch,\n            wheelMultiplier: this.lenisOptions.wheelMultiplier,\n            touchMultiplier: this.lenisOptions.touchMultiplier,\n            normalizeWheel: this.lenisOptions.normalizeWheel,\n            easing: this.lenisOptions.easing,\n        });\n        this.lenisInstance?.on('scroll', this.scrollCallback);\n\n        // Add scroll direction attribute on body\n        document.documentElement.setAttribute(\n            'data-scroll-orientation',\n            this.lenisInstance.options.orientation\n        );\n\n        requestAnimationFrame(() => {\n            // Create Core Instance\n            this.coreInstance = new Core({\n                $el: this.lenisInstance.rootElement,\n                modularInstance: this.modularInstance,\n                triggerRootMargin: this.triggerRootMargin,\n                rafRootMargin: this.rafRootMargin,\n                scrollOrientation: this.lenisInstance.options.orientation,\n            });\n\n            // Bind Events\n            this._bindEvents();\n\n            // RAF warning\n            if (this.initCustomTicker && !this.destroyCustomTicker) {\n                console.warn(\n                    'initCustomTicker callback is declared, but destroyCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            } else if (!this.initCustomTicker && this.destroyCustomTicker) {\n                console.warn(\n                    'destroyCustomTicker callback is declared, but initCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            }\n\n            // Start RAF\n            this.autoStart && this.start();\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy instance.\n     */\n    public destroy(): void {\n        // Stop raf\n        this.stop();\n        // Unbind Events\n        this._unbindEvents();\n        // Destroy Lenis\n        this.lenisInstance.destroy();\n        // Destroy Core\n        this.coreInstance.destroy();\n    }\n\n    /**\n     * Events - Subscribe events to listen.\n     */\n    private _bindEvents() {\n        this._bindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance = new RO({\n                    resizeElements: [document.body],\n                    resizeCallback: this._onResizeBind,\n                });\n            } else {\n                (window as any).addEventListener('resize', this._onResizeBind);\n            }\n        }\n    }\n\n    /**\n     * Events - Unsubscribe listened events.\n     */\n    private _unbindEvents() {\n        this._unbindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance && this.ROInstance.destroy();\n            } else {\n                (window as any).removeEventListener(\n                    'resize',\n                    this._onResizeBind\n                );\n            }\n        }\n    }\n\n    /**\n     * Events - Subscribe scrollTo events to listen.\n     */\n    private _bindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement): void => {\n                $el.addEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Events - Unsubscribe scrollTo listened events.\n     */\n    private _unbindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement) => {\n                $el.removeEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    private _onResize() {\n        // Waiting the next frame to get the new current scroll value return by Lenis\n        requestAnimationFrame(() => {\n            this.coreInstance?.onResize({\n                currentScroll: this.lenisInstance.scroll,\n            });\n        });\n    }\n\n    /**\n     * Callback - Render callback.\n     */\n    private _onRender() {\n        this.lenisInstance?.raf(Date.now());\n\n        this.coreInstance?.onRender({\n            currentScroll: this.lenisInstance.scroll,\n            smooth: this.lenisInstance.isSmooth,\n        });\n    }\n\n    /**\n     * Callback - Scroll To callback.\n     */\n    private _onScrollTo(event: MouseEvent) {\n        event.preventDefault();\n        const $target = (event.currentTarget as HTMLElement) ?? null;\n        if (!$target) return;\n        const target =\n            $target.getAttribute('data-scroll-to-href') ||\n            $target.getAttribute('href');\n        const offset = $target.getAttribute('data-scroll-to-offset') || 0;\n        const duration =\n            $target.getAttribute('data-scroll-to-duration') ||\n            this.lenisOptions.duration ||\n            defaultLenisOptions.duration;\n\n        target &&\n            this.scrollTo(target, {\n                offset: typeof offset === 'string' ? parseInt(offset) : offset,\n                duration:\n                    typeof duration === 'string'\n                        ? parseInt(duration)\n                        : duration,\n            });\n    }\n\n    /**\n     * Start RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public start(): void {\n        if (this.rafPlaying) {\n            return;\n        }\n\n        this.rafPlaying = true;\n        this.initCustomTicker\n            ? this.initCustomTicker(this._onRenderBind)\n            : this._raf();\n    }\n\n    /**\n     * Stop RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public stop(): void {\n        if (!this.rafPlaying) {\n            return;\n        }\n\n        this.rafPlaying = false;\n        this.destroyCustomTicker\n            ? this.destroyCustomTicker(this._onRenderBind)\n            : this.rafInstance && cancelAnimationFrame(this.rafInstance);\n    }\n\n    /**\n     * Remove old scroll elements items and rebuild ScrollElements instances.\n     */\n    public removeScrollElements($oldContainer: HTMLElement): void {\n        if (!$oldContainer) {\n            console.error('Please provide a DOM Element as $oldContainer');\n            return;\n        }\n\n        this._unbindScrollToEvents($oldContainer);\n        this.coreInstance?.removeScrollElements($oldContainer);\n    }\n\n    /**\n     * Add new scroll elements items and rebuild ScrollElements instances.\n     */\n    public addScrollElements($newContainer: HTMLElement): void {\n        if (!$newContainer) {\n            console.error('Please provide a DOM Element as $newContainer');\n            return;\n        }\n\n        this.coreInstance?.addScrollElements($newContainer);\n        requestAnimationFrame(() => {\n            this._bindScrollToEvents($newContainer);\n        });\n    }\n\n    /**\n     * Trigger resize callback.\n     */\n    public resize(): void {\n        this._onResizeBind();\n    }\n\n    /**\n     * Trigger scroll to callback.\n     */\n    public scrollTo(\n        target: lenisTargetScrollTo,\n        options?: ILenisScrollToOptions\n    ): void {\n        this.lenisInstance?.scrollTo(target, {\n            offset: options?.offset,\n            lerp: options?.lerp,\n            duration: options?.duration,\n            immediate: options?.immediate,\n            lock: options?.lock,\n            force: options?.force,\n            easing: options?.easing,\n            onComplete: options?.onComplete,\n        });\n    }\n\n    /**\n     * RequestAnimationFrame that active Lenis smooth and scroll progress.\n     *\n     * @private\n     *\n     */\n    private _raf() {\n        this._onRenderBind();\n        this.rafInstance = requestAnimationFrame(() => this._raf());\n    }\n}\n"],"names":["IO","constructor","scrollElements","rootMargin","IORaf","observer","_init","observerOptions","onIntersect","entries","forEach","entry","$targetItem","find","item","$el","target","isIntersecting","isAlreadyIntersected","_setInview","_setOutOfView","IntersectionObserver","scrollElement","$scrollElement","observe","destroy","disconnect","unobserve","setInteractivityOn","setInview","setInteractivityOff","setOutOfView","attributes","scrollRepeat","clamp","min","max","value","mapRange","inMin","inMax","outMin","outMax","inRange","outRange","normalize","closestNumber","array","reduce","prev","curr","Math","abs","INVIEW_CLASS","PROGRESS_CSS_VAR","PROGRESS_MODULAR_METHOD","ScrollElement","id","modularInstance","subscribeElementUpdateFn","unsubscribeElementUpdateFn","needRaf","scrollOrientation","_this$$el$dataset$scr","_this$$el$dataset$scr2","_this$$el$dataset$scr3","_this$$el$dataset$scr4","_this$$el$dataset$scr5","intersection","metrics","currentScroll","translateValue","progress","lastProgress","progressModularModules","isInview","isInteractive","isInFold","isFirstResize","scrollClass","dataset","scrollOffset","scrollPosition","scrollModuleProgress","scrollCssProgress","scrollEventProgress","scrollSpeed","parseFloat","scrollCall","scrollCallSelf","scrollIgnoreFold","scrollEnableTouchSpeed","start","end","offsetStart","offsetEnd","bcr","window","scrollY","scrollX","_getProgressModularModules","_resize","onResize","onRender","smooth","wSize","innerHeight","innerWidth","_computeProgress","isNaN","style","transform","classList","add","way","from","_getScrollCallFrom","_dispatchCall","remove","getBoundingClientRect","_computeMetrics","_computeIntersection","top","left","height","width","metricsStart","metricsSize","offset","split","undefined","trim","scrollPositionStart","scrollPositionEnd","viewportStart","includes","parseInt","replace","viewportEnd","forcedProgress","_setCssProgress","_setCustomEventProgress","modularModules","call","moduleName","moduleId","currentProgress","setProperty","toString","customEventName","customEvent","CustomEvent","detail","dispatchEvent","modulesIdNames","Object","keys","filter","key","modules","length","modulesIdName","module","moduleObj","push","closestIntersectionValue","_this$attributes$scro","_this$attributes","callParameters","callSelf","_targetModuleId","func","targetModuleId","ATTRIBUTES_THAT_NEED_RAF","TRIGGER_ROOT_MARGIN","RAF_ROOT_MARGIN","Core","triggerRootMargin","rafRootMargin","$scrollContainer","triggeredScrollElements","RAFScrollElements","scrollElementsToUpdate","IOTriggerInstance","IORafInstance","console","error","$scrollElements","querySelectorAll","$scrollElementsArr","Array","_subscribeScrollElements","_unsubscribeAllScrollElements","removeScrollElements","$oldContainer","$scrollElementsToRemove","index","$scrollElementsToRemoveArr","indexOf","splice","targetScrollElementToUpdate","targetScrollElement","_unsubscribeElementUpdate","scrollElementItem","addScrollElements","$newContainer","ids","maxID","fromIndex","toObserve","_checkRafNeeded","scrollElementInstance","_subscribeElementUpdate","bind","scrollElementToUpdate","attributesThatNeedRaf","removeAttribute","attributeToRemove","attribute","map","test","join","RO","resizeElements","resizeCallback","$resizeElements","isFirstObserve","_this$resizeCallback","ResizeObserver","$resizeElement","defaultLenisOptions","wrapper","content","document","documentElement","lerp","duration","orientation","gestureOrientation","smoothWheel","smoothTouch","wheelMultiplier","touchMultiplier","normalizeWheel","easing","t","pow","LocomotiveScroll","lenisOptions","autoResize","autoStart","scrollCallback","initCustomTicker","destroyCustomTicker","rafPlaying","lenisInstance","coreInstance","rafInstance","ROInstance","_onRenderBind","_onResizeBind","_onScrollToBind","_extends","assign","_onRender","_onScrollTo","_onResize","_this$lenisInstance","Lenis","on","setAttribute","options","requestAnimationFrame","rootElement","_bindEvents","warn","stop","_unbindEvents","_bindScrollToEvents","body","addEventListener","_unbindScrollToEvents","removeEventListener","$container","$rootContainer","$scrollToElements","_this$coreInstance","scroll","_this$lenisInstance2","_this$coreInstance2","raf","Date","now","isSmooth","event","_event$currentTarget","preventDefault","$target","currentTarget","getAttribute","scrollTo","_raf","cancelAnimationFrame","_this$coreInstance3","_this$coreInstance4","resize","_this$lenisInstance3","immediate","lock","force","onComplete"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAaG;AAKW,MAAOA,EAAE,CAAA;AAMnBC,EAAAA,WAAYA,CAAA;IACRC,cAAc;AACdC,IAAAA,UAAU,GAAG,qBAAqB;AAClCC,IAAAA,KAAAA;AACS,GAAA,EAAA;AAAA,IAAA,IAAA,CATNF,cAAc,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACbC,UAAU,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACVC,KAAK,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACLC,QAAQ,GAAA,KAAA,CAAA,CAAA;AAOZ;IACA,IAAI,CAACH,cAAc,GAAGA,cAAc,CAAA;IACpC,IAAI,CAACC,UAAU,GAAGA,UAAU,CAAA;IAC5B,IAAI,CAACC,KAAK,GAAGA,KAAK,CAAA;AAElB;IACA,IAAI,CAACE,KAAK,EAAE,CAAA;AAChB,GAAA;AAEA;;;;AAIG;AACKA,EAAAA,KAAKA,GAAA;AACT;AACA,IAAA,MAAMC,eAAe,GAAG;MACpBJ,UAAU,EAAE,IAAI,CAACA,UAAAA;KACpB,CAAA;AAED;IACA,MAAMK,WAAW,GAAIC,OAAoC,IAAI;AACzDA,MAAAA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAI;AACtB,QAAA,MAAMC,WAAW,GACb,IAAI,CAACV,cAAc,CAACW,IAAI,CACnBC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,KAAK,CAACK,MAAM,CACtC,CAAA;QAEL,IAAIL,KAAK,CAACM,cAAc,EAAE;AACtBL,UAAAA,WAAW,KAAKA,WAAW,CAACM,oBAAoB,GAAG,IAAI,CAAC,CAAA;AACxD,UAAA,IAAI,CAACC,UAAU,CAACR,KAAK,CAAC,CAAA;AACzB,SAAA,MAAM,IAAIC,WAAW,IAAIA,WAAW,CAACM,oBAAoB,EAAE;AACxD,UAAA,IAAI,CAACE,aAAa,CAACT,KAAK,CAAC,CAAA;AAC5B,SAAA;AACL,OAAC,CAAC,CAAA;KACL,CAAA;AAED;IACA,IAAI,CAACN,QAAQ,GAAG,IAAIgB,oBAAoB,CAACb,WAAW,EAAED,eAAe,CAAC,CAAA;AAEtE;AACA,IAAA,KAAK,MAAMe,aAAa,IAAI,IAAI,CAACpB,cAAc,EAAE;AAC7C,MAAA,MAAMqB,cAAc,GAAGD,aAAa,CAACP,GAAG,CAAA;AACxC,MAAA,IAAI,CAACS,OAAO,CAACD,cAAc,CAAC,CAAA;AAC/B,KAAA;AACL,GAAA;AAEA;;AAEG;AACIE,EAAAA,OAAOA,GAAA;AACV,IAAA,IAAI,CAACpB,QAAQ,CAACqB,UAAU,EAAE,CAAA;AAC9B,GAAA;AAEA;;;;AAIG;EACIF,OAAOA,CAACD,cAA2B,EAAA;IACtC,IAAI,CAACA,cAAc,EAAE;AACjB,MAAA,OAAA;AACH,KAAA;AAED,IAAA,IAAI,CAAClB,QAAQ,CAACmB,OAAO,CAACD,cAAc,CAAC,CAAA;AACzC,GAAA;AAEA;;;;AAIG;EACII,SAASA,CAACJ,cAA2B,EAAA;IACxC,IAAI,CAACA,cAAc,EAAE;AACjB,MAAA,OAAA;AACH,KAAA;AAED,IAAA,IAAI,CAAClB,QAAQ,CAACsB,SAAS,CAACJ,cAAc,CAAC,CAAA;AAC3C,GAAA;AAEA;;;;;;AAMG;EACKJ,UAAUA,CAACR,KAAgC,EAAA;AAC/C,IAAA,MAAMW,aAAa,GAAG,IAAI,CAACpB,cAAc,CAACW,IAAI,CACzCS,aAAa,IAAKA,aAAa,CAACP,GAAG,KAAKJ,KAAK,CAACK,MAAM,CACxD,CAAA;IAED,IAAI,CAACZ,KAAK,KAAIkB,aAAa,oBAAbA,aAAa,CAAEM,kBAAkB,EAAE,CAAA,CAAA;IACjD,CAAC,IAAI,CAACxB,KAAK,KAAIkB,aAAa,oBAAbA,aAAa,CAAEO,SAAS,EAAE,CAAA,CAAA;AAC7C,GAAA;AAEA;;;;;;AAMG;EACKT,aAAaA,CAACT,KAAgC,EAAA;AAClD,IAAA,MAAMW,aAAa,GAAG,IAAI,CAACpB,cAAc,CAACW,IAAI,CACzCS,aAAa,IAAKA,aAAa,CAACP,GAAG,KAAKJ,KAAK,CAACK,MAAM,CACxD,CAAA;IAED,IAAI,CAACZ,KAAK,KAAIkB,aAAa,oBAAbA,aAAa,CAAEQ,mBAAmB,EAAE,CAAA,CAAA;IAClD,CAAC,IAAI,CAAC1B,KAAK,KAAIkB,aAAa,oBAAbA,aAAa,CAAES,YAAY,EAAE,CAAA,CAAA;AAE5C;AACA,IAAA,IAAI,EAACT,aAAa,IAAbA,IAAAA,IAAAA,aAAa,CAAEU,UAAU,CAACC,YAAY,CAAI,IAAA,CAAC,IAAI,CAAC7B,KAAK,EAAE;AACxD,MAAA,IAAI,CAACuB,SAAS,CAAChB,KAAK,CAACK,MAAqB,CAAC,CAAA;AAC9C,KAAA;AACL,GAAA;AACH;;ACjJD;AAEA;;;;;;;;AAQG;SACakB,KAAKA,CAACC,GAAW,EAAEC,GAAW,EAAEC,KAAa,EAAA;AACzD,EAAA,OAAOA,KAAK,GAAGF,GAAG,GAAGA,GAAG,GAAGE,KAAK,GAAGD,GAAG,GAAGA,GAAG,GAAGC,KAAK,CAAA;AACxD,CAAA;AAEA;;;;;;;;;;AAUG;AACG,SAAUC,QAAQA,CACpBC,KAAa,EACbC,KAAa,EACbC,MAAc,EACdC,MAAc,EACdL,KAAa,EAAA;AAEb,EAAA,MAAMM,OAAO,GAAGH,KAAK,GAAGD,KAAK,CAAA;AAC7B,EAAA,MAAMK,QAAQ,GAAGF,MAAM,GAAGD,MAAM,CAAA;AAChC,EAAA,OAAOA,MAAM,IAAK,CAACJ,KAAK,GAAGE,KAAK,IAAII,OAAO,GAAIC,QAAQ,IAAI,CAAC,CAAC,CAAA;AACjE,CAAA;AAEA;;;;;;;;AAQG;SACaC,SAASA,CAACV,GAAW,EAAEC,GAAW,EAAEC,KAAa,EAAA;EAC7D,OAAOC,QAAQ,CAACH,GAAG,EAAEC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAA;AAC1C,CAAA;AAEA;;;;;;;AAOG;AACa,SAAAS,aAAaA,CAACC,KAAe,EAAE/B,MAAc,EAAA;EACzD,OAAO+B,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAI;IAC/B,OAAOC,IAAI,CAACC,GAAG,CAACF,IAAI,GAAGlC,MAAM,CAAC,GAAGmC,IAAI,CAACC,GAAG,CAACH,IAAI,GAAGjC,MAAM,CAAC,GAAGkC,IAAI,GAAGD,IAAI,CAAA;AAC1E,GAAC,CAAC,CAAA;AACN;;AC/DA;;;;;;;;;;;;;;;;AAgBG;AAgBH;AACA,MAAMI,YAAY,GAAG,WAAW,CAAA;AAChC,MAAMC,gBAAgB,GAAG,YAAY,CAAA;AACrC,MAAMC,uBAAuB,GAAG,kBAAkB,CAAA;AAEpC,MAAOC,aAAa,CAAA;AAwB9BvD,EAAAA,WAAAA,CAAY;IACRc,GAAG;IACH0C,EAAE;IACFC,eAAe;IACfC,wBAAwB;IACxBC,0BAA0B;IAC1BC,OAAO;AACPC,IAAAA,iBAAAA;AACoB,GAAA,EAAA;IAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,CAAA;AAAA,IAAA,IAAA,CA/BjBpD,GAAG,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACH0C,EAAE,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACFI,OAAO,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACP7B,UAAU,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACV8B,iBAAiB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACjB5C,oBAAoB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CAEnBkD,YAAY,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACZC,OAAO,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACPC,aAAa,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACbC,cAAc,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACdC,QAAQ,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACRC,YAAY,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACZf,eAAe,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACfgB,sBAAsB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACtBC,QAAQ,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACRC,aAAa,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACbC,QAAQ,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACRC,aAAa,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CAEbnB,wBAAwB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACxBC,0BAA0B,GAAA,KAAA,CAAA,CAAA;AAW9B;IACA,IAAI,CAAC7C,GAAG,GAAGA,GAAG,CAAA;AACd;IACA,IAAI,CAAC0C,EAAE,GAAGA,EAAE,CAAA;AACZ;IACA,IAAI,CAACI,OAAO,GAAGA,OAAO,CAAA;AACtB;IACA,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB,CAAA;AAC1C;IACA,IAAI,CAACJ,eAAe,GAAGA,eAAe,CAAA;AACtC;IACA,IAAI,CAACC,wBAAwB,GAAGA,wBAAwB,CAAA;IACxD,IAAI,CAACC,0BAA0B,GAAGA,0BAA0B,CAAA;AAE5D;IACA,IAAI,CAAC5B,UAAU,GAAG;AACd+C,MAAAA,WAAW,EAAAhB,CAAAA,qBAAA,GAAE,IAAI,CAAChD,GAAG,CAACiE,OAAO,CAAC,aAAa,CAAC,KAAAjB,IAAAA,GAAAA,qBAAA,GAAIV,YAAY;AAC5D4B,MAAAA,YAAY,EAAAjB,CAAAA,sBAAA,GAAE,IAAI,CAACjD,GAAG,CAACiE,OAAO,CAAC,cAAc,CAAC,KAAAhB,IAAAA,GAAAA,sBAAA,GAAI,KAAK;AACvDkB,MAAAA,cAAc,EAAAjB,CAAAA,sBAAA,GAAE,IAAI,CAAClD,GAAG,CAACiE,OAAO,CAAC,gBAAgB,CAAC,KAAAf,IAAAA,GAAAA,sBAAA,GAAI,WAAW;MACjEkB,oBAAoB,EAChB,IAAI,CAACpE,GAAG,CAACiE,OAAO,CAAC,sBAAsB,CAAC,IAAI,IAAI;MACpDI,iBAAiB,EAAE,IAAI,CAACrE,GAAG,CAACiE,OAAO,CAAC,mBAAmB,CAAC,IAAI,IAAI;AAChEK,MAAAA,mBAAmB,EAAAnB,CAAAA,sBAAA,GACf,IAAI,CAACnD,GAAG,CAACiE,OAAO,CAAC,qBAAqB,CAAC,KAAAd,IAAAA,GAAAA,sBAAA,GAAI,IAAI;MACnDoB,WAAW,EACP,IAAI,CAACvE,GAAG,CAACiE,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,GACjCO,UAAU,CAAC,IAAI,CAACxE,GAAG,CAACiE,OAAO,CAAC,aAAa,CAAC,CAAC,GAC3C,IAAI;MACd/C,YAAY,EAAE,IAAI,CAAClB,GAAG,CAACiE,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI;AACtDQ,MAAAA,UAAU,EAAArB,CAAAA,sBAAA,GAAE,IAAI,CAACpD,GAAG,CAACiE,OAAO,CAAC,YAAY,CAAC,KAAAb,IAAAA,GAAAA,sBAAA,GAAI,IAAI;MAClDsB,cAAc,EAAE,IAAI,CAAC1E,GAAG,CAACiE,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI;MAC1DU,gBAAgB,EAAE,IAAI,CAAC3E,GAAG,CAACiE,OAAO,CAAC,kBAAkB,CAAC,IAAI,IAAI;MAC9DW,sBAAsB,EAClB,IAAI,CAAC5E,GAAG,CAACiE,OAAO,CAAC,wBAAwB,CAAC,IAAI,IAAA;KACrD,CAAA;AAED;IACA,IAAI,CAACZ,YAAY,GAAG;AAChBwB,MAAAA,KAAK,EAAE,CAAC;AACRC,MAAAA,GAAG,EAAE,CAAA;KACR,CAAA;AAED;IACA,IAAI,CAACxB,OAAO,GAAG;AACXyB,MAAAA,WAAW,EAAE,CAAC;AACdC,MAAAA,SAAS,EAAE,CAAC;AACZC,MAAAA,GAAG,EAAE,EAAa;KACrB,CAAA;AAED;AACA,IAAA,IAAI,CAAC1B,aAAa,GACd,IAAI,CAACR,iBAAiB,KAAK,UAAU,GAC/BmC,MAAM,CAACC,OAAO,GACdD,MAAM,CAACE,OAAO,CAAA;AAExB;IACA,IAAI,CAAC5B,cAAc,GAAG,CAAC,CAAA;AAEvB;IACA,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAA;IACjB,IAAI,CAACC,YAAY,GAAG,IAAI,CAAA;IACxB,IAAI,CAACC,sBAAsB,GAAG,EAAE,CAAA;AAEhC;IACA,IAAI,CAACC,QAAQ,GAAG,KAAK,CAAA;IACrB,IAAI,CAACC,aAAa,GAAG,KAAK,CAAA;IAC1B,IAAI,CAAC1D,oBAAoB,GAAG,KAAK,CAAA;IACjC,IAAI,CAAC2D,QAAQ,GAAG,KAAK,CAAA;IACrB,IAAI,CAACC,aAAa,GAAG,IAAI,CAAA;AAEzB;IACA,IAAI,CAACxE,KAAK,EAAE,CAAA;AAChB,GAAA;AAEA;;;;AAIG;AACKA,EAAAA,KAAKA,GAAA;AACT,IAAA,IAAI,CAAC,IAAI,CAACuD,OAAO,EAAE;AACf,MAAA,OAAA;AACH,KAAA;AAED;IACA,IAAI,IAAI,CAACH,eAAe,IAAI,IAAI,CAAC1B,UAAU,CAACmD,oBAAoB,EAAE;MAC9D,IAAI,CAACiB,0BAA0B,EAAE,CAAA;AACpC,KAAA;AAED;IACA,IAAI,CAACC,OAAO,EAAE,CAAA;AAClB,GAAA;AAEA;;AAEG;AACIC,EAAAA,QAAQA,CAAC;AAAEhC,IAAAA,aAAAA;AAA8C,GAAA,EAAA;IAC5D,IAAI,CAACA,aAAa,GAAGA,aAAa,CAAA;IAClC,IAAI,CAAC+B,OAAO,EAAE,CAAA;AAClB,GAAA;AAEA;;AAEG;AACIE,EAAAA,QAAQA,CAAC;IAAEjC,aAAa;AAAEkC,IAAAA,MAAAA;AAAuC,GAAA,EAAA;AACpE,IAAA,MAAMC,KAAK,GACP,IAAI,CAAC3C,iBAAiB,KAAK,UAAU,GAC/BmC,MAAM,CAACS,WAAW,GAClBT,MAAM,CAACU,UAAU,CAAA;IAC3B,IAAI,CAACrC,aAAa,GAAGA,aAAa,CAAA;IAClC,IAAI,CAACsC,gBAAgB,EAAE,CAAA;AAEvB;AACA,IAAA,IACI,IAAI,CAAC5E,UAAU,CAACsD,WAAW,IAC3B,CAACuB,KAAK,CAAC,IAAI,CAAC7E,UAAU,CAACsD,WAAW,CAAC,EACrC;AACE;MACA,IAAI,CAAC,IAAI,CAACtD,UAAU,CAAC2D,sBAAsB,IAAI,CAACa,MAAM,EAAE;QACpD,IAAI,IAAI,CAACjC,cAAc,EAAE;AACrB,UAAA,IAAI,CAACxD,GAAG,CAAC+F,KAAK,CAACC,SAAS,IAAyB,oBAAA,CAAA,CAAA;AACpD,SAAA;QACD,IAAI,CAACxC,cAAc,GAAG,CAAC,CAAA;AAEvB;AACH,OAAA,MAAM;AACH;QACA,IAAI,IAAI,CAACM,QAAQ,EAAE;UACf,MAAML,QAAQ,GAAGrB,IAAI,CAACf,GAAG,CAAC,CAAC,EAAE,IAAI,CAACoC,QAAQ,CAAC,CAAA;AAC3C,UAAA,IAAI,CAACD,cAAc,GACfC,QAAQ,GAAGiC,KAAK,GAAG,IAAI,CAACzE,UAAU,CAACsD,WAAW,GAAG,CAAC,CAAC,CAAA;AAC1D,SAAA,MAAM;AACH,UAAA,MAAMd,QAAQ,GAAGlC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACkC,QAAQ,CAAC,CAAA;AACrD,UAAA,IAAI,CAACD,cAAc,GACfC,QAAQ,GAAGiC,KAAK,GAAG,IAAI,CAACzE,UAAU,CAACsD,WAAW,GAAG,CAAC,CAAC,CAAA;AAC1D,SAAA;QAED,IAAI,CAACvE,GAAG,CAAC+F,KAAK,CAACC,SAAS,GACpB,IAAI,CAACjD,iBAAiB,KAAK,UAAU,GAC/B,CAAA,eAAA,EAAkB,IAAI,CAACS,cAAsB,CAAA,MAAA,CAAA,GAC9B,CAAA,YAAA,EAAA,IAAI,CAACA,eAAyB,SAAA,CAAA,CAAA;AAC1D,OAAA;AACJ,KAAA;AACL,GAAA;AAEA;;AAEG;AACI1C,EAAAA,SAASA,GAAA;IACZ,IAAI,IAAI,CAAC8C,QAAQ,EAAE;AACf,MAAA,OAAA;AACH,KAAA;IAED,IAAI,CAACA,QAAQ,GAAG,IAAI,CAAA;AACpB,IAAA,IAAI,CAAC5D,GAAG,CAACiG,SAAS,CAACC,GAAG,CAAC,IAAI,CAACjF,UAAU,CAAC+C,WAAW,CAAC,CAAA;IAEnD,MAAMmC,GAAG,GAAkB,OAAO,CAAA;AAClC,IAAA,MAAMC,IAAI,GAAmB,IAAI,CAACC,kBAAkB,EAAE,CAAA;AACtD,IAAA,IAAI,CAACpF,UAAU,CAACwD,UAAU,IAAI,IAAI,CAAC6B,aAAa,CAACH,GAAG,EAAEC,IAAI,CAAC,CAAA;AAC/D,GAAA;AAEA;;AAEG;AACIpF,EAAAA,YAAYA,GAAA;IACf,IAAI,EAAE,IAAI,CAAC4C,QAAQ,IAAI,IAAI,CAAC3C,UAAU,CAACC,YAAY,CAAC,EAAE;AAClD,MAAA,OAAA;AACH,KAAA;IAED,IAAI,CAAC0C,QAAQ,GAAG,KAAK,CAAA;AACrB,IAAA,IAAI,CAAC5D,GAAG,CAACiG,SAAS,CAACM,MAAM,CAAC,IAAI,CAACtF,UAAU,CAAC+C,WAAW,CAAC,CAAA;IAEtD,MAAMmC,GAAG,GAAkB,OAAO,CAAA;AAClC,IAAA,MAAMC,IAAI,GAAmB,IAAI,CAACC,kBAAkB,EAAE,CAAA;AACtD,IAAA,IAAI,CAACpF,UAAU,CAACwD,UAAU,IAAI,IAAI,CAAC6B,aAAa,CAACH,GAAG,EAAEC,IAAI,CAAC,CAAA;AAC/D,GAAA;AAEA;;;AAGG;AACIvF,EAAAA,kBAAkBA,GAAA;IACrB,IAAI,IAAI,CAACgD,aAAa,EAAE;AACpB,MAAA,OAAA;AACH,KAAA;IAED,IAAI,CAACA,aAAa,GAAG,IAAI,CAAA;AACzB,IAAA,IAAI,CAACjB,wBAAwB,CAAC,IAAI,CAAC,CAAA;AACvC,GAAA;AAEA;;;AAGG;AACI7B,EAAAA,mBAAmBA,GAAA;AACtB,IAAA,IAAI,CAAC,IAAI,CAAC8C,aAAa,EAAE;AACrB,MAAA,OAAA;AACH,KAAA;IAED,IAAI,CAACA,aAAa,GAAG,KAAK,CAAA;AAC1B,IAAA,IAAI,CAAChB,0BAA0B,CAAC,IAAI,CAAC,CAAA;AAErC;IACA,IAAI,CAACa,YAAY,IAAI,IAAI,IACrB,IAAI,CAACmC,gBAAgB,CAAC9D,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC2B,YAAY,CAAC,CAAC,CAAA;AACvE,GAAA;AAEA;;;;AAIG;AACK4B,EAAAA,OAAOA,GAAA;IACX,IAAI,CAAChC,OAAO,CAAC2B,GAAG,GAAG,IAAI,CAACjF,GAAG,CAACwG,qBAAqB,EAAE,CAAA;IACnD,IAAI,CAACC,eAAe,EAAE,CAAA;IACtB,IAAI,CAACC,oBAAoB,EAAE,CAAA;AAE3B;IACA,IAAI,IAAI,CAAC3C,aAAa,EAAE;MACpB,IAAI,CAACA,aAAa,GAAG,KAAK,CAAA;AAC1B;MACA,IAAI,IAAI,CAACD,QAAQ,EAAE;QACf,IAAI,CAAChD,SAAS,EAAE,CAAA;AACnB,OAAA;AACJ,KAAA;AACL,GAAA;AAEA;;;;AAIG;AACK2F,EAAAA,eAAeA,GAAA;IACnB,MAAM;MAAEE,GAAG;MAAEC,IAAI;MAAEC,MAAM;AAAEC,MAAAA,KAAAA;AAAK,KAAE,GAAG,IAAI,CAACxD,OAAO,CAAC2B,GAAG,CAAA;AACrD,IAAA,MAAMS,KAAK,GACP,IAAI,CAAC3C,iBAAiB,KAAK,UAAU,GAC/BmC,MAAM,CAACS,WAAW,GAClBT,MAAM,CAACU,UAAU,CAAA;IAC3B,MAAMmB,YAAY,GAAG,IAAI,CAAChE,iBAAiB,KAAK,UAAU,GAAG4D,GAAG,GAAGC,IAAI,CAAA;IACvE,MAAMI,WAAW,GACb,IAAI,CAACjE,iBAAiB,KAAK,UAAU,GAAG8D,MAAM,GAAGC,KAAK,CAAA;AAE1D,IAAA,IAAI,CAACxD,OAAO,CAACyB,WAAW,GACpB,IAAI,CAACxB,aAAa,GAAGwD,YAAY,GAAG,IAAI,CAACvD,cAAc,CAAA;IAC3D,IAAI,CAACF,OAAO,CAAC0B,SAAS,GAAG,IAAI,CAAC1B,OAAO,CAACyB,WAAW,GAAGiC,WAAW,CAAA;AAE/D,IAAA,IACI,IAAI,CAAC1D,OAAO,CAACyB,WAAW,GAAGW,KAAK,IAChC,CAAC,IAAI,CAACzE,UAAU,CAAC0D,gBAAgB,EACnC;MACE,IAAI,CAACb,QAAQ,GAAG,IAAI,CAAA;AACvB,KAAA,MAAM;MACH,IAAI,CAACA,QAAQ,GAAG,KAAK,CAAA;AACxB,KAAA;AACL,GAAA;AAEA;;;;AAIG;AACK4C,EAAAA,oBAAoBA,GAAA;AACxB;AACA,IAAA,MAAMhB,KAAK,GACP,IAAI,CAAC3C,iBAAiB,KAAK,UAAU,GAC/BmC,MAAM,CAACS,WAAW,GAClBT,MAAM,CAACU,UAAU,CAAA;AAE3B;IACA,MAAMoB,WAAW,GACb,IAAI,CAACjE,iBAAiB,KAAK,UAAU,GAC/B,IAAI,CAACO,OAAO,CAAC2B,GAAG,CAAC4B,MAAM,GACvB,IAAI,CAACvD,OAAO,CAAC2B,GAAG,CAAC6B,KAAK,CAAA;AAEhC;IACA,MAAMG,MAAM,GAAG,IAAI,CAAChG,UAAU,CAACiD,YAAY,CAACgD,KAAK,CAAC,GAAG,CAAC,CAAA;AACtD,IAAA,MAAMnC,WAAW,GAAGkC,MAAM,CAAC,CAAC,CAAC,IAAIE,SAAS,GAAGF,MAAM,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE,GAAG,GAAG,CAAA;AACnE,IAAA,MAAMpC,SAAS,GAAGiC,MAAM,CAAC,CAAC,CAAC,IAAIE,SAAS,GAAGF,MAAM,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE,GAAG,GAAG,CAAA;AAEjE;IACA,MAAMjD,cAAc,GAAG,IAAI,CAAClD,UAAU,CAACkD,cAAc,CAAC+C,KAAK,CAAC,GAAG,CAAC,CAAA;AAChE,IAAA,IAAIG,mBAAmB,GACnBlD,cAAc,CAAC,CAAC,CAAC,IAAIgD,SAAS,GAAGhD,cAAc,CAAC,CAAC,CAAC,CAACiD,IAAI,EAAE,GAAG,OAAO,CAAA;AACvE,IAAA,MAAME,iBAAiB,GACnBnD,cAAc,CAAC,CAAC,CAAC,IAAIgD,SAAS,GAAGhD,cAAc,CAAC,CAAC,CAAC,CAACiD,IAAI,EAAE,GAAG,KAAK,CAAA;AAErE;AACA,IAAA,MAAMG,aAAa,GAAGxC,WAAW,CAACyC,QAAQ,CAAC,GAAG,CAAC,GACzC9B,KAAK,GAAG+B,QAAQ,CAAC1C,WAAW,CAAC2C,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACN,IAAI,EAAE,CAAC,GAAG,IAAI,GAC5DK,QAAQ,CAAC1C,WAAW,CAAC,CAAA;AAC3B,IAAA,MAAM4C,WAAW,GAAG3C,SAAS,CAACwC,QAAQ,CAAC,GAAG,CAAC,GACrC9B,KAAK,GAAG+B,QAAQ,CAACzC,SAAS,CAAC0C,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACN,IAAI,EAAE,CAAC,GAAG,IAAI,GAC1DK,QAAQ,CAACzC,SAAS,CAAC,CAAA;AAEzB;IACA,IAAI,IAAI,CAAClB,QAAQ,EAAE;AACfuD,MAAAA,mBAAmB,GAAG,MAAM,CAAA;AAC/B,KAAA;AAED;AACA,IAAA,QAAQA,mBAAmB;AACvB,MAAA,KAAK,OAAO;AACR,QAAA,IAAI,CAAChE,YAAY,CAACwB,KAAK,GACnB,IAAI,CAACvB,OAAO,CAACyB,WAAW,GAAGW,KAAK,GAAG6B,aAAa,CAAA;AACpD,QAAA,MAAA;AAEJ,MAAA,KAAK,QAAQ;AACT,QAAA,IAAI,CAAClE,YAAY,CAACwB,KAAK,GACnB,IAAI,CAACvB,OAAO,CAACyB,WAAW,GACxBW,KAAK,GACL6B,aAAa,GACbP,WAAW,GAAG,GAAG,CAAA;AACrB,QAAA,MAAA;AAEJ,MAAA,KAAK,KAAK;AACN,QAAA,IAAI,CAAC3D,YAAY,CAACwB,KAAK,GACnB,IAAI,CAACvB,OAAO,CAACyB,WAAW,GACxBW,KAAK,GACL6B,aAAa,GACbP,WAAW,CAAA;AACf,QAAA,MAAA;AAEJ,MAAA,KAAK,MAAM;AACP,QAAA,IAAI,CAAC3D,YAAY,CAACwB,KAAK,GAAG,CAAC,CAAA;AAC3B,QAAA,MAAA;AAEJ,MAAA;AACI,QAAA,IAAI,CAACxB,YAAY,CAACwB,KAAK,GACnB,IAAI,CAACvB,OAAO,CAACyB,WAAW,GAAGW,KAAK,GAAG6B,aAAa,CAAA;AACpD,QAAA,MAAA;AACP,KAAA;AAED;AACA,IAAA,QAAQD,iBAAiB;AACrB,MAAA,KAAK,OAAO;QACR,IAAI,CAACjE,YAAY,CAACyB,GAAG,GAAG,IAAI,CAACxB,OAAO,CAACyB,WAAW,GAAG4C,WAAW,CAAA;AAC9D,QAAA,MAAA;AAEJ,MAAA,KAAK,QAAQ;AACT,QAAA,IAAI,CAACtE,YAAY,CAACyB,GAAG,GACjB,IAAI,CAACxB,OAAO,CAACyB,WAAW,GAAG4C,WAAW,GAAGX,WAAW,GAAG,GAAG,CAAA;AAC9D,QAAA,MAAA;AAEJ,MAAA,KAAK,KAAK;AACN,QAAA,IAAI,CAAC3D,YAAY,CAACyB,GAAG,GACjB,IAAI,CAACxB,OAAO,CAACyB,WAAW,GAAG4C,WAAW,GAAGX,WAAW,CAAA;AACxD,QAAA,MAAA;AAEJ,MAAA;AACI,QAAA,IAAI,CAAC3D,YAAY,CAACyB,GAAG,GACjB,IAAI,CAACxB,OAAO,CAACyB,WAAW,GAAG4C,WAAW,GAAGX,WAAW,CAAA;AACxD,QAAA,MAAA;AACP,KAAA;AAED;IACA,IAAI,IAAI,CAAC3D,YAAY,CAACyB,GAAG,IAAI,IAAI,CAACzB,YAAY,CAACwB,KAAK,EAAE;AAClD,MAAA,QAAQyC,iBAAiB;AACrB,QAAA,KAAK,OAAO;UACR,IAAI,CAACjE,YAAY,CAACyB,GAAG,GAAG,IAAI,CAACzB,YAAY,CAACwB,KAAK,GAAG,CAAC,CAAA;AACnD,UAAA,MAAA;AAEJ,QAAA,KAAK,QAAQ;AACT,UAAA,IAAI,CAACxB,YAAY,CAACyB,GAAG,GACjB,IAAI,CAACzB,YAAY,CAACwB,KAAK,GAAGmC,WAAW,GAAG,GAAG,CAAA;AAC/C,UAAA,MAAA;AAEJ,QAAA,KAAK,KAAK;UACN,IAAI,CAAC3D,YAAY,CAACyB,GAAG,GACjB,IAAI,CAACzB,YAAY,CAACwB,KAAK,GAAGmC,WAAW,CAAA;AACzC,UAAA,MAAA;AAEJ,QAAA;UACI,IAAI,CAAC3D,YAAY,CAACyB,GAAG,GAAG,IAAI,CAACzB,YAAY,CAACwB,KAAK,GAAG,CAAC,CAAA;AACnD,UAAA,MAAA;AACP,OAAA;AACJ,KAAA;AACL,GAAA;AAEA;;;;;;;AAOG;EACKgB,gBAAgBA,CAAC+B,cAAuB,EAAA;AAC5C;AACA,IAAA,MAAMnE,QAAQ,GACVmE,cAAc,IAAA,IAAA,GAAdA,cAAc,GACdzG,KAAK,CACD,CAAC,EACD,CAAC,EACDW,SAAS,CACL,IAAI,CAACuB,YAAY,CAACwB,KAAK,EACvB,IAAI,CAACxB,YAAY,CAACyB,GAAG,EACrB,IAAI,CAACvB,aAAa,CACrB,CACJ,CAAA;IAEL,IAAI,CAACE,QAAQ,GAAGA,QAAQ,CAAA;AAExB,IAAA,IAAIA,QAAQ,IAAI,IAAI,CAACC,YAAY,EAAE;MAC/B,IAAI,CAACA,YAAY,GAAGD,QAAQ,CAAA;AAE5B;MACA,IAAI,CAACxC,UAAU,CAACoD,iBAAiB,IAAI,IAAI,CAACwD,eAAe,CAACpE,QAAQ,CAAC,CAAA;AAEnE;MACA,IAAI,CAACxC,UAAU,CAACqD,mBAAmB,IAC/B,IAAI,CAACwD,uBAAuB,CAACrE,QAAQ,CAAC,CAAA;AAE1C;AACA,MAAA,IAAI,IAAI,CAACxC,UAAU,CAACmD,oBAAoB,EAAE;AACtC,QAAA,KAAK,MAAM2D,cAAc,IAAI,IAAI,CAACpE,sBAAsB,EAAE;UACtD,IAAI,CAAChB,eAAe,IAChB,IAAI,CAACA,eAAe,CAACqF,IAAI,CACrBxF,uBAAuB,EACvBiB,QAAQ,EACRsE,cAAc,CAACE,UAAU,EACzBF,cAAc,CAACG,QAAQ,CAC1B,CAAA;AACR,SAAA;AACJ,OAAA;AAED;MACAzE,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC3C,SAAS,EAAE,CAAA;AAChD2C,MAAAA,QAAQ,KAAK,CAAC,IAAI,IAAI,CAACzC,YAAY,EAAE,CAAA;AACrCyC,MAAAA,QAAQ,KAAK,CAAC,IAAI,IAAI,CAACzC,YAAY,EAAE,CAAA;AACxC,KAAA;AACL,GAAA;AAEA;;;;;;AAMG;AACH6G,EAAAA,eAAeA,CAACM,eAAe,GAAG,CAAC,EAAA;AAC/B,IAAA,IAAI,CAACnI,GAAG,CAAC+F,KAAK,CAACqC,WAAW,CACtB7F,gBAAgB,EAChB4F,eAAe,CAACE,QAAQ,EAAE,CAC7B,CAAA;AACL,GAAA;AAEA;;;;;;AAMG;AACHP,EAAAA,uBAAuBA,CAACK,eAAe,GAAG,CAAC,EAAA;AACvC,IAAA,MAAMG,eAAe,GAAG,IAAI,CAACrH,UAAU,CAACqD,mBAAmB,CAAA;IAE3D,IAAI,CAACgE,eAAe,EAAE,OAAA;AAEtB,IAAA,MAAMC,WAAW,GAAG,IAAIC,WAAW,CAACF,eAAe,EAAE;AACjDG,MAAAA,MAAM,EAAE;QACJxI,MAAM,EAAE,IAAI,CAACD,GAAG;AAChByD,QAAAA,QAAQ,EAAE0E,eAAAA;AACb,OAAA;AACJ,KAAA,CAAC,CAAA;AACFjD,IAAAA,MAAM,CAACwD,aAAa,CAACH,WAAW,CAAC,CAAA;AACrC,GAAA;AAEA;;;;AAIG;AACHlD,EAAAA,0BAA0BA,GAAA;AACtB,IAAA,IAAI,CAAC,IAAI,CAAC1C,eAAe,EAAE;AACvB,MAAA,OAAA;AACH,KAAA;IAED,MAAMgG,cAAc,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC7I,GAAG,CAACiE,OAAO,CAAC,CAAC6E,MAAM,CAAEC,GAAG,IAC5DA,GAAG,CAACvB,QAAQ,CAAC,QAAQ,CAAC,CACzB,CAAA;IACD,MAAMwB,OAAO,GAAUJ,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACiD,eAAe,CAACqG,OAAO,CAAC,CAAA;AAEnE,IAAA,IAAI,CAACL,cAAc,CAACM,MAAM,EAAE;AACxB,MAAA,OAAA;AACH,KAAA;AAED,IAAA,KAAK,MAAMC,aAAa,IAAIP,cAAc,EAAE;MACxC,MAAMT,QAAQ,GAAG,IAAI,CAAClI,GAAG,CAACiE,OAAO,CAACiF,aAAa,CAAC,CAAA;MAEhD,IAAI,CAAChB,QAAQ,EAAE;AACX,QAAA,OAAA;AACH,OAAA;AAED,MAAA,KAAK,MAAMiB,MAAM,IAAIH,OAAO,EAAE;AAC1B,QAAA,MAAM,CAACf,UAAU,EAAEmB,SAAS,CAAC,GAAGD,MAAM,CAAA;QAEtC,IAAIjB,QAAQ,IAAIkB,SAAS,EAAE;AACvB,UAAA,IAAI,CAACzF,sBAAsB,CAAC0F,IAAI,CAAC;YAC7BpB,UAAU;AACVC,YAAAA,QAAAA;AACH,WAAA,CAAC,CAAA;AACL,SAAA;AACJ,OAAA;AACJ,KAAA;AACL,GAAA;AAEA;;;;AAIG;AACH7B,EAAAA,kBAAkBA,GAAA;IACd,MAAMiD,wBAAwB,GAAGvH,aAAa,CAC1C,CAAC,IAAI,CAACsB,YAAY,CAACwB,KAAK,EAAE,IAAI,CAACxB,YAAY,CAACyB,GAAG,CAAC,EAChD,IAAI,CAACvB,aAAa,CACrB,CAAA;IACD,OAAO,IAAI,CAACF,YAAY,CAACwB,KAAK,KAAKyE,wBAAwB,GACrD,OAAO,GACP,KAAK,CAAA;AACf,GAAA;AAEA;;;;;;;AAOG;AACHhD,EAAAA,aAAaA,CAACH,GAAkB,EAAEC,IAAoB,EAAA;IAAA,IAAAmD,qBAAA,EAAAC,gBAAA,CAAA;AAClD,IAAA,MAAMC,cAAc,GAAA,CAAAF,qBAAA,GAAG,IAAI,CAACtI,UAAU,CAACwD,UAAU,qBAA1B8E,qBAAA,CAA4BrC,KAAK,CAAC,GAAG,CAAC,CAAA;IAC7D,MAAMwC,QAAQ,GAAAF,CAAAA,gBAAA,GAAG,IAAI,CAACvI,UAAU,KAAA,IAAA,GAAA,KAAA,CAAA,GAAfuI,gBAAA,CAAiB9E,cAAc,CAAA;AAEhD,IAAA,IAAI+E,cAAc,IAAIA,cAAc,CAACR,MAAM,GAAG,CAAC,EAAE;AAAA,MAAA,IAAAU,eAAA,CAAA;AAC7C;MACA,MAAM,CAACC,IAAI,EAAE3B,UAAU,EAAEC,QAAQ,CAAC,GAAGuB,cAAc,CAAA;AACnD,MAAA,IAAII,cAAc,CAAA;AAElB;AACA,MAAA,IAAIH,QAAQ,EAAE;AACVG,QAAAA,cAAc,GAAG,IAAI,CAAC7J,GAAG,CAACiE,OAAO,CAAU,CAAAgE,MAAAA,EAAAA,UAAU,CAACb,IAAI,EAAE,EAAE,CAAC,CAAA;AAClE,OAAA,MAAM;AACHyC,QAAAA,cAAc,GAAG3B,QAAQ,CAAA;AAC5B,OAAA;AAED,MAAA,IAAI,CAACvF,eAAe,IAChB,IAAI,CAACA,eAAe,CAACqF,IAAI,CACrB4B,IAAI,CAACxC,IAAI,EAAE,EACX;QACInH,MAAM,EAAE,IAAI,CAACD,GAAG;QAChBmG,GAAG;AACHC,QAAAA,IAAAA;OACH,EACD6B,UAAU,CAACb,IAAI,EAAE,EAAAuC,CAAAA,eAAA,GACjBE,cAAc,qBAAdF,eAAA,CAAgBvC,IAAI,EAAE,CACzB,CAAA;KACR,MAAM,IAAIqC,cAAc,EAAE;AACvB;AACA,MAAA,MAAM,CAACnB,eAAe,CAAC,GAAGmB,cAAc,CAAA;AACxC,MAAA,MAAMlB,WAAW,GAAG,IAAIC,WAAW,CAACF,eAAe,EAAE;AACjDG,QAAAA,MAAM,EAAE;UACJxI,MAAM,EAAE,IAAI,CAACD,GAAG;UAChBmG,GAAG;AACHC,UAAAA,IAAAA;AACH,SAAA;AACJ,OAAA,CAAC,CAAA;AACFlB,MAAAA,MAAM,CAACwD,aAAa,CAACH,WAAW,CAAC,CAAA;AACpC,KAAA;AACL,GAAA;AACH;;AC/nBD;;AAEG;AAWH;AACA,MAAMuB,wBAAwB,GAAG,CAC7B,cAAc,EACd,gBAAgB,EAChB,sBAAsB,EACtB,mBAAmB,EACnB,qBAAqB,EACrB,aAAa,CAChB,CAAA;AAED;AACA,MAAMC,mBAAmB,GAAG,qBAAqB,CAAA;AACjD,MAAMC,eAAe,GAAG,qBAAqB,CAAC;AAEhC,MAAOC,IAAI,CAAA;AAarB/K,EAAAA,WAAYA,CAAA;IACRc,GAAG;IACH2C,eAAe;IACfuH,iBAAiB;IACjBC,aAAa;AACbpH,IAAAA,iBAAAA;AACU,GAAA,EAAA;AAAA,IAAA,IAAA,CAlBNqH,gBAAgB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CAChBzH,eAAe,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACfuH,iBAAiB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACjBC,aAAa,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACbhL,cAAc,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACdkL,uBAAuB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACvBC,iBAAiB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACjBC,sBAAsB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACtBC,iBAAiB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACjBC,aAAa,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACb1H,iBAAiB,GAAA,KAAA,CAAA,CAAA;IASrB,IAAI,CAAC/C,GAAG,EAAE;AACN0K,MAAAA,OAAO,CAACC,KAAK,CAAC,iDAAiD,CAAC,CAAA;AAChE,MAAA,OAAA;AACH,KAAA;AAED;IACA,IAAI,CAACP,gBAAgB,GAAGpK,GAAG,CAAA;AAE3B;IACA,IAAI,CAAC2C,eAAe,GAAGA,eAAe,CAAA;AAEtC;IACA,IAAI,CAACI,iBAAiB,GAAGA,iBAAiB,CAAA;AAE1C;AACA,IAAA,IAAI,CAACmH,iBAAiB,GAAGA,iBAAiB,IAAjBA,IAAAA,GAAAA,iBAAiB,GAAIH,mBAAmB,CAAA;AACjE,IAAA,IAAI,CAACI,aAAa,GAAGA,aAAa,IAAbA,IAAAA,GAAAA,aAAa,GAAIH,eAAe,CAAA;AAErD;IACA,IAAI,CAAC7K,cAAc,GAAG,EAAE,CAAA;IACxB,IAAI,CAACkL,uBAAuB,GAAG,EAAE,CAAA;IACjC,IAAI,CAACC,iBAAiB,GAAG,EAAE,CAAA;IAC3B,IAAI,CAACC,sBAAsB,GAAG,EAAE,CAAA;AAGhC;IACA,IAAI,CAAChL,KAAK,EAAE,CAAA;AAChB,GAAA;AAEA;;;;AAIG;AACKA,EAAAA,KAAKA,GAAA;IACT,MAAMqL,eAAe,GACjB,IAAI,CAACR,gBAAgB,CAACS,gBAAgB,CAAC,eAAe,CAAC,CAAA;AAE3D,IAAA,MAAMC,kBAAkB,GAAGC,KAAK,CAAC3E,IAAI,CAACwE,eAAe,CAAkB,CAAA;AACvE,IAAA,IAAI,CAACI,wBAAwB,CAACF,kBAAkB,CAAC,CAAA;AAEjD;AACA,IAAA,IAAI,CAACN,iBAAiB,GAAG,IAAIvL,EAAE,CAAC;AAC5BE,MAAAA,cAAc,EAAE,CAAC,GAAG,IAAI,CAACkL,uBAAuB,CAAC;MACjDjL,UAAU,EAAE,IAAI,CAAC8K,iBAAiB;AAClC7K,MAAAA,KAAK,EAAE,KAAA;AACV,KAAA,CAAC,CAAA;AAEF;AACA,IAAA,IAAI,CAACoL,aAAa,GAAG,IAAIxL,EAAE,CAAC;AACxBE,MAAAA,cAAc,EAAE,CAAC,GAAG,IAAI,CAACmL,iBAAiB,CAAC;MAC3ClL,UAAU,EAAE,IAAI,CAAC+K,aAAa;AAC9B9K,MAAAA,KAAK,EAAE,IAAA;AACV,KAAA,CAAC,CAAA;AACN,GAAA;AAEA;;AAEG;AACIqB,EAAAA,OAAOA,GAAA;AACV,IAAA,IAAI,CAAC8J,iBAAiB,CAAC9J,OAAO,EAAE,CAAA;AAChC,IAAA,IAAI,CAAC+J,aAAa,CAAC/J,OAAO,EAAE,CAAA;IAC5B,IAAI,CAACuK,6BAA6B,EAAE,CAAA;AACxC,GAAA;AAEA;;AAEG;AACH1F,EAAAA,QAAQA,CAAC;AAAEhC,IAAAA,aAAAA;AAA8C,GAAA,EAAA;AACrD,IAAA,KAAK,MAAMhD,aAAa,IAAI,IAAI,CAAC+J,iBAAiB,EAAE;MAChD/J,aAAa,CAACgF,QAAQ,CAAC;AACnBhC,QAAAA,aAAAA;AAC8B,OAAA,CAAC,CAAA;AACtC,KAAA;AACL,GAAA;AAEA;;AAEG;AACHiC,EAAAA,QAAQA,CAAC;IAAEjC,aAAa;AAAEkC,IAAAA,MAAAA;AAAuC,GAAA,EAAA;AAC7D,IAAA,KAAK,MAAMlF,aAAa,IAAI,IAAI,CAACgK,sBAAsB,EAAE;MACrDhK,aAAa,CAACiF,QAAQ,CAAC;QACnBjC,aAAa;AACbkC,QAAAA,MAAAA;AAC8B,OAAA,CAAC,CAAA;AACtC,KAAA;AACL,GAAA;AAEA;;;;AAIG;EACHyF,oBAAoBA,CAACC,aAA0B,EAAA;AAC3C,IAAA,MAAMC,uBAAuB,GACzBD,aAAa,CAACN,gBAAgB,CAAC,eAAe,CAAC,CAAA;AAEnD,IAAA,IAAI,CAACO,uBAAuB,CAACnC,MAAM,EAAE,OAAA;AAErC;AACA,IAAA,KAAK,IAAIoC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,IAAI,CAAChB,uBAAuB,CAACpB,MAAM,EAAEoC,KAAK,EAAE,EAAE;AACtE,MAAA,MAAM9K,aAAa,GAAG,IAAI,CAAC8J,uBAAuB,CAACgB,KAAK,CAAC,CAAA;AACzD,MAAA,MAAMC,0BAA0B,GAAGP,KAAK,CAAC3E,IAAI,CAACgF,uBAAuB,CAAmB,CAAA;MACxF,IAAIE,0BAA0B,CAACC,OAAO,CAAChL,aAAa,CAACP,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;QAC5D,IAAI,CAACwK,iBAAiB,CAAC5J,SAAS,CAACL,aAAa,CAACP,GAAG,CAAC,CAAA;QACnD,IAAI,CAACqK,uBAAuB,CAACmB,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC,CAAA;AAChD,OAAA;AACJ,KAAA;AAED,IAAA,KAAK,IAAIA,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,IAAI,CAACf,iBAAiB,CAACrB,MAAM,EAAEoC,KAAK,EAAE,EAAE;AAChE,MAAA,MAAM9K,aAAa,GAAG,IAAI,CAAC+J,iBAAiB,CAACe,KAAK,CAAC,CAAA;AACnD,MAAA,MAAMC,0BAA0B,GAAGP,KAAK,CAAC3E,IAAI,CAACgF,uBAAuB,CAAmB,CAAA;MACxF,IAAIE,0BAA0B,CAACC,OAAO,CAAChL,aAAa,CAACP,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;QAC5D,IAAI,CAACyK,aAAa,CAAC7J,SAAS,CAACL,aAAa,CAACP,GAAG,CAAC,CAAA;QAC/C,IAAI,CAACsK,iBAAiB,CAACkB,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC,CAAA;AAC1C,OAAA;AACJ,KAAA;AAED;AACAD,IAAAA,uBAAuB,CAACzL,OAAO,CAAEa,cAAc,IAAI;AAC/C,MAAA,MAAMiL,2BAA2B,GAC7B,IAAI,CAAClB,sBAAsB,CAACzK,IAAI,CAC3BS,aAAa,IAAKA,aAAa,CAACP,GAAG,KAAKQ,cAAc,CAC1D,CAAA;AACL,MAAA,MAAMkL,mBAAmB,GAAG,IAAI,CAACvM,cAAc,CAACW,IAAI,CAC/CS,aAAa,IAAKA,aAAa,CAACP,GAAG,KAAKQ,cAAc,CAC1D,CAAA;AAED,MAAA,IAAIiL,2BAA2B,EAAE;AAC7B,QAAA,IAAI,CAACE,yBAAyB,CAACF,2BAA2B,CAAC,CAAA;AAC9D,OAAA;AACD,MAAA,IAAIC,mBAAmB,EAAE;AACrB,QAAA,IAAI,CAACvM,cAAc,GAAG,IAAI,CAACA,cAAc,CAAC2J,MAAM,CAC3C8C,iBAAiB,IACdA,iBAAiB,CAAClJ,EAAE,IAAIgJ,mBAAmB,CAAChJ,EAAE,CACrD,CAAA;AACJ,OAAA;AACL,KAAC,CAAC,CAAA;AACN,GAAA;AAEA;;;;AAIG;EACHmJ,iBAAiBA,CAACC,aAA0B,EAAA;AACxC;AACA,IAAA,MAAMlB,eAAe,GAAGkB,aAAa,CAACjB,gBAAgB,CAAC,eAAe,CAAC,CAAA;AAEvE;IACA,MAAMkB,GAAG,GAAa,EAAE,CAAA;AACxB,IAAA,IAAI,CAAC5M,cAAc,CAACQ,OAAO,CAAEY,aAAa,IAAI;AAC1CwL,MAAAA,GAAG,CAAC1C,IAAI,CAAC9I,aAAa,CAACmC,EAAE,CAAC,CAAA;AAC9B,KAAC,CAAC,CAAA;IACF,MAAMsJ,KAAK,GAAG5J,IAAI,CAACf,GAAG,CAAC,GAAG0K,GAAG,CAAC,CAAA;AAC9B,IAAA,MAAME,SAAS,GAAGD,KAAK,GAAG,CAAC,CAAA;AAC3B,IAAA,MAAMlB,kBAAkB,GAAGC,KAAK,CAAC3E,IAAI,CAACwE,eAAe,CAAkB,CAAA;IACvE,IAAI,CAACI,wBAAwB,CACzBF,kBAAkB,EAClBmB,SAAS,EACT,IAAI,CACP,CAAA;AACL,GAAA;AAEA;;;;;;;;AAQG;EACHjB,wBAAwBA,CACpBJ,eAA8B,EAC9BqB,SAAS,GAAG,CAAC,EACbC,SAAS,GAAG,KAAK,EAAA;AAEjB;AACA,IAAA,KAAK,IAAIb,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGT,eAAe,CAAC3B,MAAM,EAAEoC,KAAK,EAAE,EAAE;AACzD,MAAA,MAAM7K,cAAc,GAAGoK,eAAe,CAACS,KAAK,CAAC,CAAA;AAC7C,MAAA,MAAMvI,OAAO,GAAG,IAAI,CAACqJ,eAAe,CAAC3L,cAAc,CAAC,CAAA;AAEpD,MAAA,MAAM4L,qBAAqB,GAAG,IAAI3J,aAAa,CAAC;AAC5CzC,QAAAA,GAAG,EAAEQ,cAAc;QACnBkC,EAAE,EAAEuJ,SAAS,GAAGZ,KAAK;QACrBtI,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;QACzCJ,eAAe,EAAE,IAAI,CAACA,eAAe;QACrCC,wBAAwB,EACpB,IAAI,CAACyJ,uBAAuB,CAACC,IAAI,CAAC,IAAI,CAAC;QAC3CzJ,0BAA0B,EACtB,IAAI,CAAC8I,yBAAyB,CAACW,IAAI,CAAC,IAAI,CAAC;AAC7CxJ,QAAAA,OAAAA;AACH,OAAA,CAAC,CAAA;AAEF;AACA,MAAA,IAAI,CAAC3D,cAAc,CAACkK,IAAI,CAAC+C,qBAAqB,CAAC,CAAA;AAE/C;AACA,MAAA,IAAItJ,OAAO,EAAE;AACT,QAAA,IAAI,CAACwH,iBAAiB,CAACjB,IAAI,CAAC+C,qBAAqB,CAAC,CAAA;AAElD;AACA,QAAA,IAAIF,SAAS,EAAE;UACX,IAAI,CAACzB,aAAa,CAACtL,cAAc,CAACkK,IAAI,CAClC+C,qBAAqB,CACxB,CAAA;UACD,IAAI,CAAC3B,aAAa,CAAChK,OAAO,CAAC2L,qBAAqB,CAACpM,GAAG,CAAC,CAAA;AACxD,SAAA;AACJ,OAAA,MAAM;AACH,QAAA,IAAI,CAACqK,uBAAuB,CAAChB,IAAI,CAAC+C,qBAAqB,CAAC,CAAA;AAExD;AACA,QAAA,IAAIF,SAAS,EAAE;UACX,IAAI,CAAC1B,iBAAiB,CAACrL,cAAc,CAACkK,IAAI,CACtC+C,qBAAqB,CACxB,CAAA;UACD,IAAI,CAAC5B,iBAAiB,CAAC/J,OAAO,CAAC2L,qBAAqB,CAACpM,GAAG,CAAC,CAAA;AAC5D,SAAA;AACJ,OAAA;AACJ,KAAA;AACL,GAAA;AAEA;;;;AAIG;AACHiL,EAAAA,6BAA6BA,GAAA;IACzB,IAAI,CAAC9L,cAAc,GAAG,EAAE,CAAA;IACxB,IAAI,CAACmL,iBAAiB,GAAG,EAAE,CAAA;IAC3B,IAAI,CAACD,uBAAuB,GAAG,EAAE,CAAA;IACjC,IAAI,CAACE,sBAAsB,GAAG,EAAE,CAAA;AACpC,GAAA;AAEA;;;;;;;AAOG;EACH8B,uBAAuBA,CAAC9L,aAA4B,EAAA;AAChD,IAAA,IAAI,CAACgK,sBAAsB,CAAClB,IAAI,CAAC9I,aAAa,CAAC,CAAA;AACnD,GAAA;AAEA;;;;;;;AAOG;EACHoL,yBAAyBA,CAACpL,aAA4B,EAAA;AAClD,IAAA,IAAI,CAACgK,sBAAsB,GAAG,IAAI,CAACA,sBAAsB,CAACzB,MAAM,CAC3DyD,qBAAqB,IAClBA,qBAAqB,CAAC7J,EAAE,IAAInC,aAAa,CAACmC,EAAE,CACnD,CAAA;AACL,GAAA;AAEA;;;;;;;;AAQG;EACHyJ,eAAeA,CAAC3L,cAA2B,EAAA;AACvC,IAAA,IAAIgM,qBAAqB,GAAG,CAAC,GAAG1C,wBAAwB,CAAC,CAAA;AAEzD;IACA,MAAM2C,eAAe,GAAIC,iBAAyB,IAAI;MAClDF,qBAAqB,GAAGA,qBAAqB,CAAC1D,MAAM,CAC/C6D,SAAS,IAAKA,SAAS,IAAID,iBAAiB,CAChD,CAAA;KACJ,CAAA;AAED;AACA,IAAA,IAAIlM,cAAc,CAACyD,OAAO,CAACC,YAAY,EAAE;AACrC,MAAA,MAAM5C,KAAK,GAAGd,cAAc,CAACyD,OAAO,CAACC,YAAY,CAC5CgD,KAAK,CAAC,GAAG,CAAC,CACV0F,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACnF,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACN,IAAI,EAAE,CAAC,CAC3C0F,IAAI,CAAC,GAAG,CAAC,CAAA;MACd,IAAIxL,KAAK,IAAI,KAAK,EAAE;AAChB,QAAA,OAAO,IAAI,CAAA;AACd,OAAA,MAAM;QACHmL,eAAe,CAAC,cAAc,CAAC,CAAA;AAClC,OAAA;AACJ,KAAA,MAAM;MACHA,eAAe,CAAC,cAAc,CAAC,CAAA;AAClC,KAAA;AAED;AACA,IAAA,IAAIjM,cAAc,CAACyD,OAAO,CAACE,cAAc,EAAE;MACvC,MAAM7C,KAAK,GAAGd,cAAc,CAACyD,OAAO,CAACE,cAAc,CAACiD,IAAI,EAAE,CAAA;MAC1D,IAAI9F,KAAK,IAAI,YAAY,EAAE;AACvB,QAAA,OAAO,IAAI,CAAA;AACd,OAAA,MAAM;QACHmL,eAAe,CAAC,gBAAgB,CAAC,CAAA;AACpC,OAAA;AACJ,KAAA,MAAM;MACHA,eAAe,CAAC,gBAAgB,CAAC,CAAA;AACpC,KAAA;AAED;AACA,IAAA,IACIjM,cAAc,CAACyD,OAAO,CAACM,WAAW,IAClC,CAACuB,KAAK,CAACtB,UAAU,CAAChE,cAAc,CAACyD,OAAO,CAACM,WAAW,CAAC,CAAC,EACxD;AACE,MAAA,OAAO,IAAI,CAAA;AACd,KAAA,MAAM;MACHkI,eAAe,CAAC,aAAa,CAAC,CAAA;AACjC,KAAA;AAED;AACA,IAAA,KAAK,MAAME,SAAS,IAAIH,qBAAqB,EAAE;AAC3C,MAAA,IAAIG,SAAS,IAAInM,cAAc,CAACyD,OAAO,EAAE;AACrC,QAAA,OAAO,IAAI,CAAA;AACd,OAAA;AACJ,KAAA;AAED,IAAA,OAAO,KAAK,CAAA;AAChB,GAAA;AACH;;ACtXD;;;;;;;;;;;;;AAaG;AAIW,MAAO8I,EAAE,CAAA;AAMnB7N,EAAAA,WAAYA,CAAA;IAAE8N,cAAc;IAAEC,cAAc,GAAGA,MAAO,EAAA;AAAe,GAAA,EAAA;AAAA,IAAA,IAAA,CAL7DC,eAAe,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACfC,cAAc,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACd7N,QAAQ,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACR2N,cAAc,GAAA,KAAA,CAAA,CAAA;AAGlB;IACA,IAAI,CAACC,eAAe,GAAGF,cAAc,CAAA;IACrC,IAAI,CAACC,cAAc,GAAGA,cAAc,CAAA;AAEpC;IACA,IAAI,CAACE,cAAc,GAAG,IAAI,CAAA;AAE1B;IACA,IAAI,CAAC5N,KAAK,EAAE,CAAA;AAChB,GAAA;AAEA;;;;AAIG;AACKA,EAAAA,KAAKA,GAAA;AACT;IACA,MAAMgG,QAAQ,GAAI7F,OAA8B,IAAI;AAAA,MAAA,IAAA0N,oBAAA,CAAA;AAChD,MAAA,CAAC,IAAI,CAACD,cAAc,KAAA,CAAAC,oBAAA,GAAI,IAAI,CAACH,cAAc,KAAnBG,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,oBAAA,CAAApF,IAAA,KAAqB,CAAE,CAAA,CAAA;MAC/C,IAAI,CAACmF,cAAc,GAAG,KAAK,CAAA;KAC9B,CAAA;AAED;AACA,IAAA,IAAI,CAAC7N,QAAQ,GAAG,IAAI+N,cAAc,CAAC9H,QAAQ,CAAC,CAAA;AAE5C;AACA,IAAA,KAAK,MAAM+H,cAAc,IAAI,IAAI,CAACJ,eAAe,EAAE;AAC/C,MAAA,IAAI,CAAC5N,QAAQ,CAACmB,OAAO,CAAC6M,cAAc,CAAC,CAAA;AACxC,KAAA;AACL,GAAA;AAEA;;AAEG;AACI5M,EAAAA,OAAOA,GAAA;AACV,IAAA,IAAI,CAACpB,QAAQ,CAACqB,UAAU,EAAE,CAAA;AAC9B,GAAA;AACH;;ACjDD;;AAEG;AACH,MAAM4M,mBAAmB,GAAkB;AACvCC,EAAAA,OAAO,EAAEtI,MAAM;EACfuI,OAAO,EAAEC,QAAQ,CAACC,eAAe;AACjCC,EAAAA,IAAI,EAAE,GAAG;AACTC,EAAAA,QAAQ,EAAE,GAAG;AACbC,EAAAA,WAAW,EAAE,UAAU;AACvBC,EAAAA,kBAAkB,EAAE,UAAU;AAC9BC,EAAAA,WAAW,EAAE,IAAI;AACjBC,EAAAA,WAAW,EAAE,KAAK;AAClBC,EAAAA,eAAe,EAAE,CAAC;AAClBC,EAAAA,eAAe,EAAE,CAAC;AAClBC,EAAAA,cAAc,EAAE,IAAI;EACpBC,MAAM,EAAGC,CAAC,IAAKlM,IAAI,CAAChB,GAAG,CAAC,CAAC,EAAE,KAAK,GAAGgB,IAAI,CAACmM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAGD,CAAC,CAAC,CAAC;CAC3D,CAAA;AAED;;;;;;;;;AASG;AAEW,MAAOE,gBAAgB,CAAA;AAqBjCtP,EAAAA,WAAAA,CAAY;IACRuP,YAAY,GAAG,EAAE;IACjB9L,eAAe;IACfuH,iBAAiB;IACjBC,aAAa;AACbuE,IAAAA,UAAU,GAAG,IAAI;AACjBC,IAAAA,SAAS,GAAG,IAAI;AAChBC,IAAAA,cAAc,GAAGA,MAAO,EAAC;IACzBC,gBAAgB;AAChBC,IAAAA,mBAAAA;MAC0B,EAAE,EAAA;AAAA,IAAA,IAAA,CA9BzBC,UAAU,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CAETC,aAAa,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACbC,YAAY,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CAEZR,YAAY,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACZ9L,eAAe,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACfuH,iBAAiB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACjBC,aAAa,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACb+E,WAAW,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACXR,UAAU,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACVC,SAAS,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACTQ,UAAU,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CAEVN,gBAAgB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CAChBC,mBAAmB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACnBM,aAAa,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACbC,aAAa,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CACbC,eAAe,GAAA,KAAA,CAAA,CAAA;AAanB;IACA,IAAI,CAACb,YAAY,GAAAc,QAAA,KAAQhC,mBAAmB,EAAKkB,YAAY,CAAE,CAAA;AAE/D7F,IAAAA,MAAM,CAAC4G,MAAM,CAAC,IAAI,EAAE;MAChBf,YAAY;MACZ9L,eAAe;MACfuH,iBAAiB;MACjBC,aAAa;MACbuE,UAAU;MACVC,SAAS;MACTC,cAAc;MACdC,gBAAgB;AAChBC,MAAAA,mBAAAA;AACH,KAAA,CAAC,CAAA;AAEF;IACA,IAAI,CAACM,aAAa,GAAG,IAAI,CAACK,SAAS,CAACnD,IAAI,CAAC,IAAI,CAAC,CAAA;IAC9C,IAAI,CAACgD,eAAe,GAAG,IAAI,CAACI,WAAW,CAACpD,IAAI,CAAC,IAAI,CAAC,CAAA;IAClD,IAAI,CAAC+C,aAAa,GAAG,IAAI,CAACM,SAAS,CAACrD,IAAI,CAAC,IAAI,CAAC,CAAA;AAE9C;IACA,IAAI,CAACyC,UAAU,GAAG,KAAK,CAAA;AAEvB;IACA,IAAI,CAACxP,KAAK,EAAE,CAAA;AAChB,GAAA;AAEA;;;;AAIG;AACKA,EAAAA,KAAKA,GAAA;AAAA,IAAA,IAAAqQ,mBAAA,CAAA;AACT;AACA,IAAA,IAAI,CAACZ,aAAa,GAAG,IAAIa,KAAK,CAAC;AAC3BrC,MAAAA,OAAO,EAAE,IAAI,CAACiB,YAAY,CAACjB,OAAO;AAClCC,MAAAA,OAAO,EAAE,IAAI,CAACgB,YAAY,CAAChB,OAAO;AAClCG,MAAAA,IAAI,EAAE,IAAI,CAACa,YAAY,CAACb,IAAI;AAC5BC,MAAAA,QAAQ,EAAE,IAAI,CAACY,YAAY,CAACZ,QAAQ;AACpCC,MAAAA,WAAW,EAAE,IAAI,CAACW,YAAY,CAACX,WAAW;AAC1CC,MAAAA,kBAAkB,EAAE,IAAI,CAACU,YAAY,CAACV,kBAAkB;AACxDC,MAAAA,WAAW,EAAE,IAAI,CAACS,YAAY,CAACT,WAAW;AAC1CC,MAAAA,WAAW,EAAE,IAAI,CAACQ,YAAY,CAACR,WAAW;AAC1CC,MAAAA,eAAe,EAAE,IAAI,CAACO,YAAY,CAACP,eAAe;AAClDC,MAAAA,eAAe,EAAE,IAAI,CAACM,YAAY,CAACN,eAAe;AAClDC,MAAAA,cAAc,EAAE,IAAI,CAACK,YAAY,CAACL,cAAc;AAChDC,MAAAA,MAAM,EAAE,IAAI,CAACI,YAAY,CAACJ,MAAAA;AAC7B,KAAA,CAAC,CAAA;AACF,IAAA,CAAAuB,mBAAA,GAAA,IAAI,CAACZ,aAAa,qBAAlBY,mBAAA,CAAoBE,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAClB,cAAc,CAAC,CAAA;AAErD;AACAlB,IAAAA,QAAQ,CAACC,eAAe,CAACoC,YAAY,CACjC,yBAAyB,EACzB,IAAI,CAACf,aAAa,CAACgB,OAAO,CAAClC,WAAW,CACzC,CAAA;AAEDmC,IAAAA,qBAAqB,CAAC,MAAK;AACvB;AACA,MAAA,IAAI,CAAChB,YAAY,GAAG,IAAIhF,IAAI,CAAC;AACzBjK,QAAAA,GAAG,EAAE,IAAI,CAACgP,aAAa,CAACkB,WAAW;QACnCvN,eAAe,EAAE,IAAI,CAACA,eAAe;QACrCuH,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;QACzCC,aAAa,EAAE,IAAI,CAACA,aAAa;AACjCpH,QAAAA,iBAAiB,EAAE,IAAI,CAACiM,aAAa,CAACgB,OAAO,CAAClC,WAAAA;AACjD,OAAA,CAAC,CAAA;AAEF;MACA,IAAI,CAACqC,WAAW,EAAE,CAAA;AAElB;MACA,IAAI,IAAI,CAACtB,gBAAgB,IAAI,CAAC,IAAI,CAACC,mBAAmB,EAAE;AACpDpE,QAAAA,OAAO,CAAC0F,IAAI,CACR,sHAAsH,CACzH,CAAA;OACJ,MAAM,IAAI,CAAC,IAAI,CAACvB,gBAAgB,IAAI,IAAI,CAACC,mBAAmB,EAAE;AAC3DpE,QAAAA,OAAO,CAAC0F,IAAI,CACR,sHAAsH,CACzH,CAAA;AACJ,OAAA;AAED;AACA,MAAA,IAAI,CAACzB,SAAS,IAAI,IAAI,CAAC9J,KAAK,EAAE,CAAA;AAClC,KAAC,CAAC,CAAA;AACN,GAAA;AAEA;;AAEG;AACInE,EAAAA,OAAOA,GAAA;AACV;IACA,IAAI,CAAC2P,IAAI,EAAE,CAAA;AACX;IACA,IAAI,CAACC,aAAa,EAAE,CAAA;AACpB;AACA,IAAA,IAAI,CAACtB,aAAa,CAACtO,OAAO,EAAE,CAAA;AAC5B;AACA,IAAA,IAAI,CAACuO,YAAY,CAACvO,OAAO,EAAE,CAAA;AAC/B,GAAA;AAEA;;AAEG;AACKyP,EAAAA,WAAWA,GAAA;IACf,IAAI,CAACI,mBAAmB,EAAE,CAAA;IAE1B,IAAI,IAAI,CAAC7B,UAAU,EAAE;MACjB,IAAI,gBAAgB,IAAIxJ,MAAM,EAAE;AAC5B,QAAA,IAAI,CAACiK,UAAU,GAAG,IAAIpC,EAAE,CAAC;AACrBC,UAAAA,cAAc,EAAE,CAACU,QAAQ,CAAC8C,IAAI,CAAC;UAC/BvD,cAAc,EAAE,IAAI,CAACoC,aAAAA;AACxB,SAAA,CAAC,CAAA;AACL,OAAA,MAAM;QACFnK,MAAc,CAACuL,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACpB,aAAa,CAAC,CAAA;AACjE,OAAA;AACJ,KAAA;AACL,GAAA;AAEA;;AAEG;AACKiB,EAAAA,aAAaA,GAAA;IACjB,IAAI,CAACI,qBAAqB,EAAE,CAAA;IAE5B,IAAI,IAAI,CAAChC,UAAU,EAAE;MACjB,IAAI,gBAAgB,IAAIxJ,MAAM,EAAE;QAC5B,IAAI,CAACiK,UAAU,IAAI,IAAI,CAACA,UAAU,CAACzO,OAAO,EAAE,CAAA;AAC/C,OAAA,MAAM;QACFwE,MAAc,CAACyL,mBAAmB,CAC/B,QAAQ,EACR,IAAI,CAACtB,aAAa,CACrB,CAAA;AACJ,OAAA;AACJ,KAAA;AACL,GAAA;AAEA;;AAEG;EACKkB,mBAAmBA,CAACK,UAAwB,EAAA;IAChD,MAAMC,cAAc,GAAGD,UAAU,GAC3BA,UAAU,GACV,IAAI,CAAC5B,aAAa,CAACkB,WAAW,CAAA;IACpC,MAAMY,iBAAiB,GACnBD,cAAc,IAAA,IAAA,GAAA,KAAA,CAAA,GAAdA,cAAc,CAAEhG,gBAAgB,CAAC,kBAAkB,CAAC,CAAA;IAExD,CAAAiG,iBAAiB,IAAjBA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAiB,CAAE7H,MAAM,KACrB6H,iBAAiB,CAACnR,OAAO,CAAEK,GAAgB,IAAU;MACjDA,GAAG,CAACyQ,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACnB,eAAe,EAAE,KAAK,CAAC,CAAA;AAC9D,KAAC,CAAC,CAAA;AACV,GAAA;AAEA;;AAEG;EACKoB,qBAAqBA,CAACE,UAAwB,EAAA;IAClD,MAAMC,cAAc,GAAGD,UAAU,GAC3BA,UAAU,GACV,IAAI,CAAC5B,aAAa,CAACkB,WAAW,CAAA;IACpC,MAAMY,iBAAiB,GACnBD,cAAc,IAAA,IAAA,GAAA,KAAA,CAAA,GAAdA,cAAc,CAAEhG,gBAAgB,CAAC,kBAAkB,CAAC,CAAA;IACxD,CAAAiG,iBAAiB,IAAjBA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAiB,CAAE7H,MAAM,KACrB6H,iBAAiB,CAACnR,OAAO,CAAEK,GAAgB,IAAI;MAC3CA,GAAG,CAAC2Q,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACrB,eAAe,EAAE,KAAK,CAAC,CAAA;AACjE,KAAC,CAAC,CAAA;AACV,GAAA;AAEA;;AAEG;AACKK,EAAAA,SAASA,GAAA;AACb;AACAM,IAAAA,qBAAqB,CAAC,MAAK;AAAA,MAAA,IAAAc,kBAAA,CAAA;MACvB,CAAAA,kBAAA,OAAI,CAAC9B,YAAY,qBAAjB8B,kBAAA,CAAmBxL,QAAQ,CAAC;AACxBhC,QAAAA,aAAa,EAAE,IAAI,CAACyL,aAAa,CAACgC,MAAAA;AACrC,OAAA,CAAC,CAAA;AACN,KAAC,CAAC,CAAA;AACN,GAAA;AAEA;;AAEG;AACKvB,EAAAA,SAASA,GAAA;IAAA,IAAAwB,oBAAA,EAAAC,mBAAA,CAAA;AACb,IAAA,CAAAD,oBAAA,GAAA,IAAI,CAACjC,aAAa,qBAAlBiC,oBAAA,CAAoBE,GAAG,CAACC,IAAI,CAACC,GAAG,EAAE,CAAC,CAAA;IAEnC,CAAAH,mBAAA,OAAI,CAACjC,YAAY,qBAAjBiC,mBAAA,CAAmB1L,QAAQ,CAAC;AACxBjC,MAAAA,aAAa,EAAE,IAAI,CAACyL,aAAa,CAACgC,MAAM;AACxCvL,MAAAA,MAAM,EAAE,IAAI,CAACuJ,aAAa,CAACsC,QAAAA;AAC9B,KAAA,CAAC,CAAA;AACN,GAAA;AAEA;;AAEG;EACK5B,WAAWA,CAAC6B,KAAiB,EAAA;AAAA,IAAA,IAAAC,oBAAA,CAAA;IACjCD,KAAK,CAACE,cAAc,EAAE,CAAA;IACtB,MAAMC,OAAO,GAAAF,CAAAA,oBAAA,GAAID,KAAK,CAACI,aAA6B,KAAA,IAAA,GAAAH,oBAAA,GAAI,IAAI,CAAA;IAC5D,IAAI,CAACE,OAAO,EAAE,OAAA;AACd,IAAA,MAAMzR,MAAM,GACRyR,OAAO,CAACE,YAAY,CAAC,qBAAqB,CAAC,IAC3CF,OAAO,CAACE,YAAY,CAAC,MAAM,CAAC,CAAA;IAChC,MAAM3K,MAAM,GAAGyK,OAAO,CAACE,YAAY,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAA;AACjE,IAAA,MAAM/D,QAAQ,GACV6D,OAAO,CAACE,YAAY,CAAC,yBAAyB,CAAC,IAC/C,IAAI,CAACnD,YAAY,CAACZ,QAAQ,IAC1BN,mBAAmB,CAACM,QAAQ,CAAA;AAEhC5N,IAAAA,MAAM,IACF,IAAI,CAAC4R,QAAQ,CAAC5R,MAAM,EAAE;MAClBgH,MAAM,EAAE,OAAOA,MAAM,KAAK,QAAQ,GAAGQ,QAAQ,CAACR,MAAM,CAAC,GAAGA,MAAM;MAC9D4G,QAAQ,EACJ,OAAOA,QAAQ,KAAK,QAAQ,GACtBpG,QAAQ,CAACoG,QAAQ,CAAC,GAClBA,QAAAA;AACb,KAAA,CAAC,CAAA;AACV,GAAA;AAEA;;AAEG;AACIhJ,EAAAA,KAAKA,GAAA;IACR,IAAI,IAAI,CAACkK,UAAU,EAAE;AACjB,MAAA,OAAA;AACH,KAAA;IAED,IAAI,CAACA,UAAU,GAAG,IAAI,CAAA;AACtB,IAAA,IAAI,CAACF,gBAAgB,GACf,IAAI,CAACA,gBAAgB,CAAC,IAAI,CAACO,aAAa,CAAC,GACzC,IAAI,CAAC0C,IAAI,EAAE,CAAA;AACrB,GAAA;AAEA;;AAEG;AACIzB,EAAAA,IAAIA,GAAA;AACP,IAAA,IAAI,CAAC,IAAI,CAACtB,UAAU,EAAE;AAClB,MAAA,OAAA;AACH,KAAA;IAED,IAAI,CAACA,UAAU,GAAG,KAAK,CAAA;IACvB,IAAI,CAACD,mBAAmB,GAClB,IAAI,CAACA,mBAAmB,CAAC,IAAI,CAACM,aAAa,CAAC,GAC5C,IAAI,CAACF,WAAW,IAAI6C,oBAAoB,CAAC,IAAI,CAAC7C,WAAW,CAAC,CAAA;AACpE,GAAA;AAEA;;AAEG;EACIhE,oBAAoBA,CAACC,aAA0B,EAAA;AAAA,IAAA,IAAA6G,mBAAA,CAAA;IAClD,IAAI,CAAC7G,aAAa,EAAE;AAChBT,MAAAA,OAAO,CAACC,KAAK,CAAC,+CAA+C,CAAC,CAAA;AAC9D,MAAA,OAAA;AACH,KAAA;AAED,IAAA,IAAI,CAAC+F,qBAAqB,CAACvF,aAAa,CAAC,CAAA;IACzC,CAAA6G,mBAAA,GAAI,IAAA,CAAC/C,YAAY,KAAA,IAAA,GAAA,KAAA,CAAA,GAAjB+C,mBAAA,CAAmB9G,oBAAoB,CAACC,aAAa,CAAC,CAAA;AAC1D,GAAA;AAEA;;AAEG;EACIU,iBAAiBA,CAACC,aAA0B,EAAA;AAAA,IAAA,IAAAmG,mBAAA,CAAA;IAC/C,IAAI,CAACnG,aAAa,EAAE;AAChBpB,MAAAA,OAAO,CAACC,KAAK,CAAC,+CAA+C,CAAC,CAAA;AAC9D,MAAA,OAAA;AACH,KAAA;IAED,CAAAsH,mBAAA,GAAI,IAAA,CAAChD,YAAY,KAAA,IAAA,GAAA,KAAA,CAAA,GAAjBgD,mBAAA,CAAmBpG,iBAAiB,CAACC,aAAa,CAAC,CAAA;AACnDmE,IAAAA,qBAAqB,CAAC,MAAK;AACvB,MAAA,IAAI,CAACM,mBAAmB,CAACzE,aAAa,CAAC,CAAA;AAC3C,KAAC,CAAC,CAAA;AACN,GAAA;AAEA;;AAEG;AACIoG,EAAAA,MAAMA,GAAA;IACT,IAAI,CAAC7C,aAAa,EAAE,CAAA;AACxB,GAAA;AAEA;;AAEG;AACIwC,EAAAA,QAAQA,CACX5R,MAA2B,EAC3B+P,OAA+B,EAAA;AAAA,IAAA,IAAAmC,oBAAA,CAAA;IAE/B,CAAAA,oBAAA,GAAI,IAAA,CAACnD,aAAa,KAAA,IAAA,GAAA,KAAA,CAAA,GAAlBmD,oBAAA,CAAoBN,QAAQ,CAAC5R,MAAM,EAAE;AACjCgH,MAAAA,MAAM,EAAE+I,OAAO,IAAPA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAE/I,MAAM;AACvB2G,MAAAA,IAAI,EAAEoC,OAAO,IAAPA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEpC,IAAI;AACnBC,MAAAA,QAAQ,EAAEmC,OAAO,IAAPA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEnC,QAAQ;AAC3BuE,MAAAA,SAAS,EAAEpC,OAAO,IAAPA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEoC,SAAS;AAC7BC,MAAAA,IAAI,EAAErC,OAAO,IAAPA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEqC,IAAI;AACnBC,MAAAA,KAAK,EAAEtC,OAAO,IAAPA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEsC,KAAK;AACrBjE,MAAAA,MAAM,EAAE2B,OAAO,IAAPA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAE3B,MAAM;AACvBkE,MAAAA,UAAU,EAAEvC,OAAO,IAAPA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEuC,UAAAA;AACxB,KAAA,CAAC,CAAA;AACN,GAAA;AAEA;;;;;AAKG;AACKT,EAAAA,IAAIA,GAAA;IACR,IAAI,CAAC1C,aAAa,EAAE,CAAA;IACpB,IAAI,CAACF,WAAW,GAAGe,qBAAqB,CAAC,MAAM,IAAI,CAAC6B,IAAI,EAAE,CAAC,CAAA;AAC/D,GAAA;AACH;;;;"}