{"version":3,"file":"locomotive-scroll.umd.js","sources":["../src/core/IO.ts","../src/utils/maths.ts","../src/core/ScrollElement.ts","../src/core/Core.ts","../src/core/RO.ts","../src/index.ts"],"sourcesContent":["/**\n * Intersection Observer\n *\n * Detecting visibility of an element in the viewport.\n *\n * Features functions to:\n *\n * - Trigger inview/outOfView callbacks\n * - If the element has a requestAnimationFrame dependency, set interactivy status for the ScrollElement Class\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API}\n */\n\nimport { IIOOptions } from '../types';\nimport ScrollElement from './ScrollElement';\n\nexport default class IO {\n    public scrollElements: ScrollElement[];\n    private rootMargin: string;\n    private IORaf: boolean;\n    private observer!: IntersectionObserver;\n\n    constructor({\n        scrollElements,\n        rootMargin = '-1px -1px -1px -1px',\n        IORaf,\n    }: IIOOptions) {\n        // Parameters\n        this.scrollElements = scrollElements;\n        this.rootMargin = rootMargin;\n        this.IORaf = IORaf;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Intersection Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Options\n        const observerOptions = {\n            rootMargin: this.rootMargin,\n        };\n\n        // Callback\n        const onIntersect = (entries: IntersectionObserverEntry[]) => {\n            entries.forEach((entry) => {\n                const $targetItem: ScrollElement | undefined =\n                    this.scrollElements.find(\n                        (item) => item.$el === entry.target\n                    );\n\n                if (entry.isIntersecting) {\n                    $targetItem && ($targetItem.isAlreadyIntersected = true);\n                    this._setInview(entry);\n                } else if ($targetItem && $targetItem.isAlreadyIntersected) {\n                    this._setOutOfView(entry);\n                }\n            });\n        };\n\n        // Instance\n        this.observer = new IntersectionObserver(onIntersect, observerOptions);\n\n        // Observe each default elements\n        for (const scrollElement of this.scrollElements) {\n            const $scrollElement = scrollElement.$el;\n            this.observe($scrollElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Intersection Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n\n    /**\n     * Subscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to observe.\n     */\n    public observe($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.observe($scrollElement);\n    }\n\n    /**\n     * Unsubscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to unobserve.\n     */\n    public unobserve($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.unobserve($scrollElement);\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger inview callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setInview(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOn();\n        !this.IORaf && scrollElement?.setInview();\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger out of view callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setOutOfView(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOff();\n        !this.IORaf && scrollElement?.setOutOfView();\n\n        // Unobserve if element doesn't have repeat attribute\n        if (!scrollElement?.attributes.scrollRepeat && !this.IORaf) {\n            this.unobserve(entry.target as HTMLElement);\n        }\n    }\n}\n","// https://greensock.com/docs/v3/GSAP/gsap.utils\n\n/**\n * Clamp a value to fit within a specific range (ex: clamp(0, 100, -12) --> 0).\n *\n * @param {number} min   - Minimum value expected.\n * @param {number} max   - Maximum value expected.\n * @param {number} value - Current value.\n *\n * @returns {number} - Clamped value.\n */\nexport function clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n}\n\n/**\n * Map one range to another (ex: mapRange(-10, 10, 0, 100, 5) --> 75).\n *\n * @param {number} inMin  - Current minimum value.\n * @param {number} inMax  - Current maximum value.\n * @param {number} outMin - Maximum value expected.\n * @param {number} outMax - Maximum value expected.\n * @param {number} value  - Current value.\n *\n * @returns {number} - New value that should be between minimum value expected and maximum value.\n */\nexport function mapRange(\n    inMin: number,\n    inMax: number,\n    outMin: number,\n    outMax: number,\n    value: number\n): number {\n    const inRange = inMax - inMin;\n    const outRange = outMax - outMin;\n    return outMin + (((value - inMin) / inRange) * outRange || 0);\n}\n\n/**\n * Map a number within a range to a progress between 0 to 1 (ex: normalize(100, 200, 150) --> 0.5).\n *\n * @param {number} min   - Current minimum value.\n * @param {number} max   - Current maximum value.\n * @param {number} value - Current value.\n *\n * @returns {number} - New value that should be between 0 and 1.\n */\nexport function normalize(min: number, max: number, value: number): number {\n    return mapRange(min, max, 0, 1, value);\n}\n\n/**\n * Get closest number from an array.\n *\n * @param {number[]} array  - Numbers array.\n * @param {number}   target - Reference value.\n *\n * @returns {number} - Closest number.\n */\nexport function closestNumber(array: number[], target: number): number {\n    return array.reduce((prev, curr) => {\n        return Math.abs(curr - target) < Math.abs(prev - target) ? curr : prev;\n    });\n}\n","/**\n * Scroll Element\n *\n * Give tools to compute element progress in the viewport and triggers callbacks to animate it.\n *\n * Features functions to:\n *\n * - scrollClass - Add a custom class when the element is intersected by the offset\n * - scrollOffset - Determine offsets to intersect the element\n * - scrollPosition - Determine the element positions to consider an element as intersected.\n * - scrollModuleProgress - Send scroll progress to modular module that have a specific method (PROGRESS_MODULAR_METHOD)\n * - scrollCssProgress - Add a specific css variable (PROGRESS_CSS_VAR) that store the scroll progress\n * - scrollEventProgress - Send scroll progress to custom event listeners.\n * - scrollSpeed - Add a scroll multiplicator to create a parallax effect\n * - scrollRepeat - Repeat the option to trigger animation each time the element is intersected\n * - scrollCall - Call a custom event or a modular callback when the element is intersected\n */\n\nimport {\n    IModular,\n    IScrollElementOptions,\n    IScrollElementAttributes,\n    IScrollElementIntersection,\n    IScrollElementMetrics,\n    IProgressModularModules,\n    IScrollElementCallbacksValues,\n    scrollCallWay,\n    scrollCallFrom,\n    scrollOrientation,\n} from '../types';\nimport { clamp, closestNumber, normalize, mapRange } from '../utils/maths';\n\n/** Constants */\nconst INVIEW_CLASS = 'is-inview';\nconst PROGRESS_CSS_VAR = '--progress';\nconst PROGRESS_MODULAR_METHOD = 'onScrollProgress';\n\nexport default class ScrollElement {\n    public $el: HTMLElement;\n    public id: number;\n    public needRaf: boolean;\n    public attributes: IScrollElementAttributes;\n    public scrollOrientation: scrollOrientation;\n    public isAlreadyIntersected: boolean;\n\n    private intersection: IScrollElementIntersection;\n    private metrics: IScrollElementMetrics;\n    private currentScroll: number;\n    private translateValue: number;\n    private progress: number;\n    private lastProgress: number | null;\n    private modularInstance?: IModular;\n    private progressModularModules: IProgressModularModules[];\n    private isInview: boolean;\n    private isInteractive: boolean;\n    private isInFold: boolean;\n    private isFirstResize: boolean;\n\n    private subscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n    private unsubscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n\n    constructor({\n        $el,\n        id,\n        modularInstance,\n        subscribeElementUpdateFn,\n        unsubscribeElementUpdateFn,\n        needRaf,\n        scrollOrientation,\n    }: IScrollElementOptions) {\n        // Scroll DOM element\n        this.$el = $el;\n        // Unique ID\n        this.id = id;\n        // RAF option\n        this.needRaf = needRaf;\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n        // Modular.js\n        this.modularInstance = modularInstance;\n        // Parent's callbacks\n        this.subscribeElementUpdateFn = subscribeElementUpdateFn;\n        this.unsubscribeElementUpdateFn = unsubscribeElementUpdateFn;\n\n        // Attributes\n        this.attributes = {\n            scrollClass: this.$el.dataset['scrollClass'] ?? INVIEW_CLASS,\n            scrollOffset: this.$el.dataset['scrollOffset'] ?? '0,0',\n            scrollPosition: this.$el.dataset['scrollPosition'] ?? 'start,end',\n            scrollModuleProgress:\n                this.$el.dataset['scrollModuleProgress'] != null,\n            scrollCssProgress: this.$el.dataset['scrollCssProgress'] != null,\n            scrollEventProgress:\n                this.$el.dataset['scrollEventProgress'] ?? null,\n            scrollSpeed:\n                this.$el.dataset['scrollSpeed'] != null\n                    ? parseFloat(this.$el.dataset['scrollSpeed'])\n                    : null,\n            scrollRepeat: this.$el.dataset['scrollRepeat'] != null,\n            scrollCall: this.$el.dataset['scrollCall'] ?? null,\n            scrollCallSelf: this.$el.dataset['scrollCallSelf'] != null,\n            scrollIgnoreFold: this.$el.dataset['scrollIgnoreFold'] != null,\n            scrollEnableTouchSpeed:\n                this.$el.dataset['scrollEnableTouchSpeed'] != null,\n        };\n\n        // Limits\n        this.intersection = {\n            start: 0,\n            end: 0,\n        };\n\n        // Metrics\n        this.metrics = {\n            offsetStart: 0,\n            offsetEnd: 0,\n            bcr: {} as DOMRect,\n        };\n\n        // Scroll Values\n        this.currentScroll =\n            this.scrollOrientation === 'vertical'\n                ? window.scrollY\n                : window.scrollX;\n\n        // Parallax\n        this.translateValue = 0;\n\n        // Progress\n        this.progress = 0;\n        this.lastProgress = null;\n        this.progressModularModules = [];\n\n        // Inview\n        this.isInview = false;\n        this.isInteractive = false;\n        this.isAlreadyIntersected = false;\n        this.isInFold = false;\n        this.isFirstResize = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize progress tracking.\n     *\n     * @private\n     */\n    private _init() {\n        if (!this.needRaf) {\n            return;\n        }\n\n        // Prepare modules progress\n        if (this.modularInstance && this.attributes.scrollModuleProgress) {\n            this._getProgressModularModules();\n        }\n\n        // First resize to compute all values\n        this._resize();\n    }\n\n    /**\n     * Callback - Resize callback\n     */\n    public onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        this.currentScroll = currentScroll;\n        this._resize();\n    }\n\n    /**\n     * Callback - RAF callback\n     */\n    public onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        this.currentScroll = currentScroll;\n        this._computeProgress();\n\n        // Parallax\n        if (\n            this.attributes.scrollSpeed &&\n            !isNaN(this.attributes.scrollSpeed)\n        ) {\n            // if touch detected or smooth disabled\n            if (!this.attributes.scrollEnableTouchSpeed && !smooth) {\n                if (this.translateValue) {\n                    this.$el.style.transform = `translate3d(0, 0, 0)`;\n                }\n                this.translateValue = 0;\n\n                // if mousewheel or smooth enabled\n            } else {\n                // Check fold condition\n                if (this.isInFold) {\n                    const progress = Math.max(0, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                } else {\n                    const progress = mapRange(0, 1, -1, 1, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                }\n\n                this.$el.style.transform =\n                    this.scrollOrientation === 'vertical'\n                        ? `translate3d(0, ${this.translateValue}px, 0)`\n                        : `translate3d(${this.translateValue}px, 0, 0)`;\n            }\n        }\n    }\n\n    /**\n     * Inview callback\n     */\n    public setInview() {\n        if (this.isInview) {\n            return;\n        }\n\n        this.isInview = true;\n        this.$el.classList.add(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'enter';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Out of view callback\n     */\n    public setOutOfView() {\n        if (!(this.isInview && this.attributes.scrollRepeat)) {\n            return;\n        }\n\n        this.isInview = false;\n        this.$el.classList.remove(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'leave';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Switch interactivity on to subscribe the instance to the RAF\n     * and start calculations.\n     */\n    public setInteractivityOn() {\n        if (this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = true;\n        this.subscribeElementUpdateFn(this);\n    }\n\n    /**\n     * Switch interactivity off to unsubscribe the instance to the RAF\n     * and stop calculations.\n     */\n    public setInteractivityOff() {\n        if (!this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = false;\n        this.unsubscribeElementUpdateFn(this);\n\n        // Force progress to progress limit when the element is out\n        this.lastProgress != null &&\n            this._computeProgress(closestNumber([0, 1], this.lastProgress));\n    }\n\n    /**\n     * Resize method that compute the element's values.\n     *\n     * @private\n     */\n    private _resize() {\n        this.metrics.bcr = this.$el.getBoundingClientRect();\n        this._computeMetrics();\n        this._computeIntersection();\n\n        // First resize logic\n        if (this.isFirstResize) {\n            this.isFirstResize = false;\n            // Dispatch default call if the element is in fold.\n            if (this.isInFold) {\n                this.setInview();\n            }\n        }\n    }\n\n    /**\n     * Compute element's offsets and determine if the element is in fold.\n     *\n     * @private\n     */\n    private _computeMetrics() {\n        const { top, left, height, width } = this.metrics.bcr;\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        const metricsStart = this.scrollOrientation === 'vertical' ? top : left;\n        const metricsSize =\n            this.scrollOrientation === 'vertical' ? height : width;\n\n        this.metrics.offsetStart =\n            this.currentScroll + metricsStart - this.translateValue;\n        this.metrics.offsetEnd = this.metrics.offsetStart + metricsSize;\n\n        if (\n            this.metrics.offsetStart < wSize &&\n            !this.attributes.scrollIgnoreFold\n        ) {\n            this.isInFold = true;\n        } else {\n            this.isInFold = false;\n        }\n    }\n\n    /**\n     * Compute intersection values depending on the context.\n     *\n     * @private\n     */\n    private _computeIntersection() {\n        // Window size\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n\n        // Metrics size\n        const metricsSize =\n            this.scrollOrientation === 'vertical'\n                ? this.metrics.bcr.height\n                : this.metrics.bcr.width;\n\n        // Offset\n        const offset = this.attributes.scrollOffset.split(',');\n        const offsetStart = offset[0] != undefined ? offset[0].trim() : '0';\n        const offsetEnd = offset[1] != undefined ? offset[1].trim() : '0';\n\n        // Positions\n        const scrollPosition = this.attributes.scrollPosition.split(',');\n        let scrollPositionStart =\n            scrollPosition[0] != undefined ? scrollPosition[0].trim() : 'start';\n        const scrollPositionEnd =\n            scrollPosition[1] != undefined ? scrollPosition[1].trim() : 'end';\n\n        // Viewport\n        const viewportStart = offsetStart.includes('%')\n            ? wSize * parseInt(offsetStart.replace('%', '').trim()) * 0.01\n            : parseInt(offsetStart);\n        const viewportEnd = offsetEnd.includes('%')\n            ? wSize * parseInt(offsetEnd.replace('%', '').trim()) * 0.01\n            : parseInt(offsetEnd);\n\n        // Fold exception\n        if (this.isInFold) {\n            scrollPositionStart = 'fold';\n        }\n\n        // Define Intersection Start\n        switch (scrollPositionStart) {\n            case 'start':\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n\n            case 'middle':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize;\n                break;\n\n            case 'fold':\n                this.intersection.start = 0;\n                break;\n\n            default:\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n        }\n\n        // Define Intersection End\n        switch (scrollPositionEnd) {\n            case 'start':\n                this.intersection.end = this.metrics.offsetStart - viewportEnd;\n                break;\n\n            case 'middle':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n\n            default:\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n        }\n\n        // Avoid to have the end < the start intersection >\n        if (this.intersection.end <= this.intersection.start) {\n            switch (scrollPositionEnd) {\n                case 'start':\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n\n                case 'middle':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize * 0.5;\n                    break;\n\n                case 'end':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize;\n                    break;\n\n                default:\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Compute the scroll progress of the element depending\n     * on its intersection values.\n     *\n     * @private\n     *\n     * @param {number} [forcedProgress] - Value to force progress.\n     */\n    private _computeProgress(forcedProgress?: number) {\n        // Progress\n        const progress =\n            forcedProgress ??\n            clamp(\n                0,\n                1,\n                normalize(\n                    this.intersection.start,\n                    this.intersection.end,\n                    this.currentScroll\n                )\n            );\n\n        this.progress = progress;\n\n        if (progress != this.lastProgress) {\n            this.lastProgress = progress;\n\n            // Set the element's progress to the css variable\n            this.attributes.scrollCssProgress && this._setCssProgress(progress);\n\n            // Set the element's progress to the custom event listeners\n            this.attributes.scrollEventProgress &&\n                this._setCustomEventProgress(progress);\n\n            // Set the element's progress to inline modules\n            if (this.attributes.scrollModuleProgress) {\n                for (const modularModules of this.progressModularModules) {\n                    this.modularInstance &&\n                        this.modularInstance.call(\n                            PROGRESS_MODULAR_METHOD,\n                            progress,\n                            modularModules.moduleName,\n                            modularModules.moduleId\n                        );\n                }\n            }\n\n            // Logic to trigger the inview/out of view callbacks\n            progress > 0 && progress < 1 && this.setInview();\n            progress === 0 && this.setOutOfView();\n            progress === 1 && this.setOutOfView();\n        }\n    }\n\n    /**\n     * Set the element's progress to a specific css variable.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCssProgress(currentProgress = 0) {\n        this.$el.style.setProperty(\n            PROGRESS_CSS_VAR,\n            currentProgress.toString()\n        );\n    }\n\n    /**\n     * Set the element's progress to the custom event listeners.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCustomEventProgress(currentProgress = 0) {\n        const customEventName = this.attributes.scrollEventProgress;\n\n        if (!customEventName) return;\n\n        const customEvent = new CustomEvent(customEventName, {\n            detail: {\n                target: this.$el,\n                progress: currentProgress,\n            },\n        });\n        window.dispatchEvent(customEvent);\n    }\n\n    /**\n     * Get modular modules that can listen the element's progress.\n     *\n     * @private\n     */\n    _getProgressModularModules() {\n        if (!this.modularInstance) {\n            return;\n        }\n\n        const modulesIdNames = Object.keys(this.$el.dataset).filter((key) =>\n            key.includes('module')\n        );\n        const modules: any[] = Object.entries(this.modularInstance.modules);\n\n        if (!modulesIdNames.length) {\n            return;\n        }\n\n        for (const modulesIdName of modulesIdNames) {\n            const moduleId = this.$el.dataset[modulesIdName];\n\n            if (!moduleId) {\n                return;\n            }\n\n            for (const module of modules) {\n                const [moduleName, moduleObj] = module;\n\n                if (moduleId in moduleObj) {\n                    this.progressModularModules.push({\n                        moduleName,\n                        moduleId,\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Function to get scroll call from.\n     *\n     * @private\n     */\n    _getScrollCallFrom(): scrollCallFrom {\n        const closestIntersectionValue = closestNumber(\n            [this.intersection.start, this.intersection.end],\n            this.currentScroll\n        );\n        return this.intersection.start === closestIntersectionValue\n            ? 'start'\n            : 'end';\n    }\n\n    /**\n     * Function to dispatch a custom event or call a modular callback.\n     *\n     * @private\n     *\n     * @param {scrollCallWay} way - Enter or leave.\n     * @param {scrollCallFrom} from - Start or end.\n     */\n    _dispatchCall(way: scrollCallWay, from: scrollCallFrom) {\n        const callParameters = this.attributes.scrollCall?.split(',');\n        const callSelf = this.attributes?.scrollCallSelf;\n\n        if (callParameters && callParameters.length > 1) {\n            // Using Modular.js (https://github.com/modularorg/modularjs)\n            const [func, moduleName, moduleId] = callParameters;\n            let targetModuleId;\n\n            // If the module is set on the scroll element\n            if (callSelf) {\n                targetModuleId = this.$el.dataset[`module${moduleName.trim()}`];\n            } else {\n                targetModuleId = moduleId;\n            }\n\n            this.modularInstance &&\n                this.modularInstance.call(\n                    func.trim(),\n                    {\n                        target: this.$el,\n                        way,\n                        from,\n                    },\n                    moduleName.trim(),\n                    targetModuleId?.trim()\n                );\n        } else if (callParameters) {\n            // Using CustomEvent API (https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent)\n            const [customEventName] = callParameters;\n            const customEvent = new CustomEvent(customEventName, {\n                detail: {\n                    target: this.$el,\n                    way,\n                    from,\n                },\n            });\n            window.dispatchEvent(customEvent);\n        }\n    }\n}\n","/**\n * Integrates Lenis with Locomotive's built-in animation system\n */\n\nimport {\n    CoreOptions,\n    IModular,\n    IScrollElementCallbacksValues,\n    scrollOrientation,\n} from '../types';\nimport IO from './IO';\nimport ScrollElement from './ScrollElement';\n\n/** Defined attributes that need a requestAnimationFrame */\nconst ATTRIBUTES_THAT_NEED_RAF = [\n    'scrollOffset',\n    'scrollPosition',\n    'scrollModuleProgress',\n    'scrollCssProgress',\n    'scrollEventProgress',\n    'scrollSpeed',\n];\n\n/** Default root margins */\nconst TRIGGER_ROOT_MARGIN = '-1px -1px -1px -1px';\nconst RAF_ROOT_MARGIN = '100% 100% 100% 100%'; // Add 100vh top/bottom && 100vw left/right to use a biggest value with data-scroll-speed\n\nexport default class Core {\n    private $scrollContainer!: HTMLElement;\n    private modularInstance?: IModular;\n    private triggerRootMargin!: string;\n    private rafRootMargin!: string;\n    private scrollElements!: ScrollElement[];\n    private triggeredScrollElements!: ScrollElement[];\n    private RAFScrollElements!: ScrollElement[];\n    private scrollElementsToUpdate!: ScrollElement[];\n    private IOTriggerInstance!: IO;\n    private IORafInstance!: IO;\n    private scrollOrientation!: scrollOrientation;\n\n    constructor({\n        $el,\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        scrollOrientation,\n    }: CoreOptions) {\n        if (!$el) {\n            console.error('Please provide a DOM Element as scrollContainer');\n            return;\n        }\n\n        // Scroll container\n        this.$scrollContainer = $el;\n\n        // Modular.js\n        this.modularInstance = modularInstance;\n\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n\n        // IO Margins\n        this.triggerRootMargin = triggerRootMargin ?? TRIGGER_ROOT_MARGIN;\n        this.rafRootMargin = rafRootMargin ?? RAF_ROOT_MARGIN;\n\n        // ScrollElements arrays\n        this.scrollElements = [];\n        this.triggeredScrollElements = [];\n        this.RAFScrollElements = [];\n        this.scrollElementsToUpdate = [];\n\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize the core.\n     *\n     * @private\n     */\n    private _init() {\n        const $scrollElements =\n            this.$scrollContainer.querySelectorAll('[data-scroll]');\n\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements($scrollElementsArr);\n\n        // Trigger IO\n        this.IOTriggerInstance = new IO({\n            scrollElements: [...this.triggeredScrollElements],\n            rootMargin: this.triggerRootMargin,\n            IORaf: false,\n        });\n\n        // Raf IO\n        this.IORafInstance = new IO({\n            scrollElements: [...this.RAFScrollElements],\n            rootMargin: this.rafRootMargin,\n            IORaf: true,\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy core.\n     */\n    public destroy() {\n        this.IOTriggerInstance.destroy();\n        this.IORafInstance.destroy();\n        this._unsubscribeAllScrollElements();\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.RAFScrollElements) {\n            scrollElement.onResize({\n                currentScroll,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Callback - RAF callback.\n     */\n    onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.scrollElementsToUpdate) {\n            scrollElement.onRender({\n                currentScroll,\n                smooth,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Remove items from lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $oldContainer - HTMLElement that contains data-scroll elements to unsubscribe\n     */\n    removeScrollElements($oldContainer: HTMLElement) {\n        const $scrollElementsToRemove =\n            $oldContainer.querySelectorAll('[data-scroll]');\n\n        if (!$scrollElementsToRemove.length) return;\n\n        // 1. Remove from IO\n        for (let index = 0; index < this.triggeredScrollElements.length; index++) {\n            const scrollElement = this.triggeredScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IOTriggerInstance.unobserve(scrollElement.$el);\n                this.triggeredScrollElements.splice(index, 1);\n            }\n        }\n\n        for (let index = 0; index < this.RAFScrollElements.length; index++) {\n            const scrollElement = this.RAFScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IORafInstance.unobserve(scrollElement.$el);\n                this.RAFScrollElements.splice(index, 1);\n            }\n        }\n\n        // 2. Remove from scrollElementsToUpdate[] and scrollElements[]\n        $scrollElementsToRemove.forEach(($scrollElement) => {\n            const targetScrollElementToUpdate =\n                this.scrollElementsToUpdate.find(\n                    (scrollElement) => scrollElement.$el === $scrollElement\n                );\n            const targetScrollElement = this.scrollElements.find(\n                (scrollElement) => scrollElement.$el === $scrollElement\n            );\n\n            if (targetScrollElementToUpdate) {\n                this._unsubscribeElementUpdate(targetScrollElementToUpdate);\n            }\n            if (targetScrollElement) {\n                this.scrollElements = this.scrollElements.filter(\n                    (scrollElementItem) =>\n                        scrollElementItem.id != targetScrollElement.id\n                );\n            }\n        });\n    }\n\n    /**\n     * Add items to lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $newContainer - HTMLElement that contains data-scroll elements to subscribe\n     */\n    addScrollElements($newContainer: HTMLElement) {\n        // 3. Rebuild ScrollElements\n        const $scrollElements = $newContainer.querySelectorAll('[data-scroll]');\n\n        // 4. Get max scrollElement.id\n        const ids: number[] = [];\n        this.scrollElements.forEach((scrollElement) => {\n            ids.push(scrollElement.id);\n        });\n        const maxID = Math.max(...ids);\n        const fromIndex = maxID + 1;\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements(\n            $scrollElementsArr,\n            fromIndex,\n            true\n        );\n    }\n\n    /**\n     * Create a ScrollElement instance for each elements with\n     * `data-scroll` attribute.\n     *\n     * @private\n     *\n     * @param {HTMLElement[]} $scrollElements - List of elements that need\n     *     to be regarded.\n     */\n    _subscribeScrollElements(\n        $scrollElements: HTMLElement[],\n        fromIndex = 0,\n        toObserve = false\n    ) {\n        // For each scroll element create a ScrollElement instance\n        for (let index = 0; index < $scrollElements.length; index++) {\n            const $scrollElement = $scrollElements[index];\n            const needRaf = this._checkRafNeeded($scrollElement);\n\n            const scrollElementInstance = new ScrollElement({\n                $el: $scrollElement,\n                id: fromIndex + index,\n                scrollOrientation: this.scrollOrientation,\n                modularInstance: this.modularInstance,\n                subscribeElementUpdateFn:\n                    this._subscribeElementUpdate.bind(this),\n                unsubscribeElementUpdateFn:\n                    this._unsubscribeElementUpdate.bind(this),\n                needRaf,\n            });\n\n            // Push to common array\n            this.scrollElements.push(scrollElementInstance);\n\n            // Push to specific array\n            if (needRaf) {\n                this.RAFScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IORafInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IORafInstance.observe(scrollElementInstance.$el);\n                }\n            } else {\n                this.triggeredScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IOTriggerInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IOTriggerInstance.observe(scrollElementInstance.$el);\n                }\n            }\n        }\n    }\n\n    /**\n     * Clear all ScrollElement arrays.\n     *\n     * @private\n     */\n    _unsubscribeAllScrollElements() {\n        this.scrollElements = [];\n        this.RAFScrollElements = [];\n        this.triggeredScrollElements = [];\n        this.scrollElementsToUpdate = [];\n    }\n\n    /**\n     * Subscribe ScrollElement instance that needs to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - ScrollElement instance inview\n     *     that needs to be updated.\n     */\n    _subscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate.push(scrollElement);\n    }\n\n    /**\n     * Unscribe ScrollElement instance that doesn't need to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - The updated ScrollElement instance\n     *     out of view now.\n     */\n    _unsubscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate = this.scrollElementsToUpdate.filter(\n            (scrollElementToUpdate) =>\n                scrollElementToUpdate.id != scrollElement.id\n        );\n    }\n\n    /**\n     * Check if a DOM Element need a requestAnimationFrame to be used.\n     *\n     * @private\n     *\n     * @param {HTMLElement} $scrollElement - The element that needs to be checked.\n     *\n     * @returns {boolean}\n     */\n    _checkRafNeeded($scrollElement: HTMLElement) {\n        let attributesThatNeedRaf = [...ATTRIBUTES_THAT_NEED_RAF];\n\n        // Remove utils\n        const removeAttribute = (attributeToRemove: string) => {\n            attributesThatNeedRaf = attributesThatNeedRaf.filter(\n                (attribute) => attribute != attributeToRemove\n            );\n        };\n\n        // 1. Check scroll offset values\n        if ($scrollElement.dataset.scrollOffset) {\n            const value = $scrollElement.dataset.scrollOffset\n                .split(',')\n                .map((test) => test.replace('%', '').trim())\n                .join(',');\n            if (value != '0,0') {\n                return true;\n            } else {\n                removeAttribute('scrollOffset');\n            }\n        } else {\n            removeAttribute('scrollOffset');\n        }\n\n        // 2. Check scroll position values\n        if ($scrollElement.dataset.scrollPosition) {\n            const value = $scrollElement.dataset.scrollPosition.trim();\n            if (value != 'top,bottom') {\n                return true;\n            } else {\n                removeAttribute('scrollPosition');\n            }\n        } else {\n            removeAttribute('scrollPosition');\n        }\n\n        // 3. Check scroll speed values\n        if (\n            $scrollElement.dataset.scrollSpeed &&\n            !isNaN(parseFloat($scrollElement.dataset.scrollSpeed))\n        ) {\n            return true;\n        } else {\n            removeAttribute('scrollSpeed');\n        }\n\n        // 4. Check others attributes\n        for (const attribute of attributesThatNeedRaf) {\n            if (attribute in $scrollElement.dataset) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/**\n * Resize Observer\n *\n * The Resize Observer API provides a performant mechanism by which code can monitor an element for changes to its size,\n * with notifications being delivered to the observer each time the size changes.\n *\n * Features functions to:\n *\n * - Trigger the resize callback if the specified element's size change.\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Resize_Observer_API}\n */\n\nimport { IROOptions } from '../types';\n\nexport default class RO {\n    private $resizeElements: HTMLElement[];\n    private isFirstObserve: boolean;\n    private observer!: ResizeObserver;\n    private resizeCallback: () => void;\n\n    constructor({ resizeElements, resizeCallback = () => {} }: IROOptions) {\n        // Parameters\n        this.$resizeElements = resizeElements;\n        this.resizeCallback = resizeCallback;\n\n        // Flags\n        this.isFirstObserve = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Resize Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Callback\n        const onResize = (entries: ResizeObserverEntry[]) => {\n            !this.isFirstObserve && this.resizeCallback?.();\n            this.isFirstObserve = false;\n        };\n\n        // Instance\n        this.observer = new ResizeObserver(onResize);\n\n        // Observe each default elements\n        for (const $resizeElement of this.$resizeElements) {\n            this.observer.observe($resizeElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Resize Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n}\n","//@ts-ignore\nimport Lenis from '@studio-freight/lenis';\nimport Core from './core/Core';\nimport RO from './core/RO';\nimport {\n    ILenisOptions,\n    ILenisScrollToOptions,\n    ILenisScrollValues,\n    ILocomotiveScrollOptions,\n    IModular,\n    lenisTargetScrollTo,\n} from './types';\n\n/**\n * @type {ILenisOptions}\n */\nconst defaultLenisOptions: ILenisOptions = {\n    wrapper: window,\n    content: document.documentElement,\n    lerp: 0.1,\n    duration: 1.2,\n    orientation: 'vertical',\n    gestureOrientation: 'vertical',\n    smoothWheel: true,\n    smoothTouch: false,\n    wheelMultiplier: 1,\n    touchMultiplier: 2,\n    normalizeWheel: true,\n    easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)), // https://www.desmos.com/calculator/brs54l4xou\n};\n\n/**\n * Locomotive Scroll\n *\n * Detection of elements in viewport & smooth scrolling with parallax.\n *\n * Inspired by\n * {@link https://github.com/locomotivemtl/locomotive-scroll locomotive-scroll.js}\n * and built around\n * {@link https://github.com/studio-freight/lenis lenis.js}.\n */\n\nexport default class LocomotiveScroll {\n    public rafPlaying: boolean;\n\n    private lenisInstance: any;\n    private coreInstance: any;\n\n    private lenisOptions: ILenisOptions;\n    private modularInstance?: IModular;\n    private triggerRootMargin?: string;\n    private rafRootMargin?: string;\n    private rafInstance?: any;\n    private autoResize?: boolean;\n    private autoStart?: boolean;\n    private ROInstance?: RO;\n    private scrollCallback?(scrollValues: ILenisScrollValues): void;\n    private initCustomTicker?: (render: () => void) => void;\n    private destroyCustomTicker?: (render: () => void) => void;\n    private _onRenderBind: () => void;\n    private _onResizeBind: () => void;\n    private _onScrollToBind: (event: MouseEvent) => void;\n\n    constructor({\n        lenisOptions = {},\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        autoResize = true,\n        autoStart = true,\n        scrollCallback = () => {},\n        initCustomTicker,\n        destroyCustomTicker,\n    }: ILocomotiveScrollOptions = {}) {\n        // Arguments\n        this.lenisOptions = { ...defaultLenisOptions, ...lenisOptions };\n\n        Object.assign(this, {\n            lenisOptions,\n            modularInstance,\n            triggerRootMargin,\n            rafRootMargin,\n            autoResize,\n            autoStart,\n            scrollCallback,\n            initCustomTicker,\n            destroyCustomTicker,\n        });\n\n        // Binding\n        this._onRenderBind = this._onRender.bind(this);\n        this._onScrollToBind = this._onScrollTo.bind(this);\n        this._onResizeBind = this._onResize.bind(this);\n\n        // Data\n        this.rafPlaying = false;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize instance.\n     *\n     * @private\n     */\n    private _init(): void {\n        // Create Lenis instance\n        this.lenisInstance = new Lenis({\n            wrapper: this.lenisOptions.wrapper,\n            content: this.lenisOptions.content,\n            lerp: this.lenisOptions.lerp,\n            duration: this.lenisOptions.duration,\n            orientation: this.lenisOptions.orientation,\n            gestureOrientation: this.lenisOptions.gestureOrientation,\n            smoothWheel: this.lenisOptions.smoothWheel,\n            smoothTouch: this.lenisOptions.smoothTouch,\n            wheelMultiplier: this.lenisOptions.wheelMultiplier,\n            touchMultiplier: this.lenisOptions.touchMultiplier,\n            normalizeWheel: this.lenisOptions.normalizeWheel,\n            easing: this.lenisOptions.easing,\n        });\n        this.lenisInstance?.on('scroll', this.scrollCallback);\n\n        // Add scroll direction attribute on body\n        document.documentElement.setAttribute(\n            'data-scroll-orientation',\n            this.lenisInstance.options.orientation\n        );\n\n        requestAnimationFrame(() => {\n            // Create Core Instance\n            this.coreInstance = new Core({\n                $el: this.lenisInstance.rootElement,\n                modularInstance: this.modularInstance,\n                triggerRootMargin: this.triggerRootMargin,\n                rafRootMargin: this.rafRootMargin,\n                scrollOrientation: this.lenisInstance.options.orientation,\n            });\n\n            // Bind Events\n            this._bindEvents();\n\n            // RAF warning\n            if (this.initCustomTicker && !this.destroyCustomTicker) {\n                console.warn(\n                    'initCustomTicker callback is declared, but destroyCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            } else if (!this.initCustomTicker && this.destroyCustomTicker) {\n                console.warn(\n                    'destroyCustomTicker callback is declared, but initCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            }\n\n            // Start RAF\n            this.autoStart && this.start();\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy instance.\n     */\n    public destroy(): void {\n        // Stop raf\n        this.stop();\n        // Unbind Events\n        this._unbindEvents();\n        // Destroy Lenis\n        this.lenisInstance.destroy();\n        // Destroy Core\n        this.coreInstance.destroy();\n    }\n\n    /**\n     * Events - Subscribe events to listen.\n     */\n    private _bindEvents() {\n        this._bindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance = new RO({\n                    resizeElements: [document.body],\n                    resizeCallback: this._onResizeBind,\n                });\n            } else {\n                (window as any).addEventListener('resize', this._onResizeBind);\n            }\n        }\n    }\n\n    /**\n     * Events - Unsubscribe listened events.\n     */\n    private _unbindEvents() {\n        this._unbindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance && this.ROInstance.destroy();\n            } else {\n                (window as any).removeEventListener(\n                    'resize',\n                    this._onResizeBind\n                );\n            }\n        }\n    }\n\n    /**\n     * Events - Subscribe scrollTo events to listen.\n     */\n    private _bindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement): void => {\n                $el.addEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Events - Unsubscribe scrollTo listened events.\n     */\n    private _unbindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement) => {\n                $el.removeEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    private _onResize() {\n        // Waiting the next frame to get the new current scroll value return by Lenis\n        requestAnimationFrame(() => {\n            this.coreInstance?.onResize({\n                currentScroll: this.lenisInstance.scroll,\n            });\n        });\n    }\n\n    /**\n     * Callback - Render callback.\n     */\n    private _onRender() {\n        this.lenisInstance?.raf(Date.now());\n\n        this.coreInstance?.onRender({\n            currentScroll: this.lenisInstance.scroll,\n            smooth: this.lenisInstance.isSmooth,\n        });\n    }\n\n    /**\n     * Callback - Scroll To callback.\n     */\n    private _onScrollTo(event: MouseEvent) {\n        event.preventDefault();\n        const $target = (event.currentTarget as HTMLElement) ?? null;\n        if (!$target) return;\n        const target =\n            $target.getAttribute('data-scroll-to-href') ||\n            $target.getAttribute('href');\n        const offset = $target.getAttribute('data-scroll-to-offset') || 0;\n        const duration =\n            $target.getAttribute('data-scroll-to-duration') ||\n            this.lenisOptions.duration ||\n            defaultLenisOptions.duration;\n\n        target &&\n            this.scrollTo(target, {\n                offset: typeof offset === 'string' ? parseInt(offset) : offset,\n                duration:\n                    typeof duration === 'string'\n                        ? parseInt(duration)\n                        : duration,\n            });\n    }\n\n    /**\n     * Start RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public start(): void {\n        if (this.rafPlaying) {\n            return;\n        }\n\n        this.rafPlaying = true;\n        this.initCustomTicker\n            ? this.initCustomTicker(this._onRenderBind)\n            : this._raf();\n    }\n\n    /**\n     * Stop RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public stop(): void {\n        if (!this.rafPlaying) {\n            return;\n        }\n\n        this.rafPlaying = false;\n        this.destroyCustomTicker\n            ? this.destroyCustomTicker(this._onRenderBind)\n            : this.rafInstance && cancelAnimationFrame(this.rafInstance);\n    }\n\n    /**\n     * Remove old scroll elements items and rebuild ScrollElements instances.\n     */\n    public removeScrollElements($oldContainer: HTMLElement): void {\n        if (!$oldContainer) {\n            console.error('Please provide a DOM Element as $oldContainer');\n            return;\n        }\n\n        this._unbindScrollToEvents($oldContainer);\n        this.coreInstance?.removeScrollElements($oldContainer);\n    }\n\n    /**\n     * Add new scroll elements items and rebuild ScrollElements instances.\n     */\n    public addScrollElements($newContainer: HTMLElement): void {\n        if (!$newContainer) {\n            console.error('Please provide a DOM Element as $newContainer');\n            return;\n        }\n\n        this.coreInstance?.addScrollElements($newContainer);\n        requestAnimationFrame(() => {\n            this._bindScrollToEvents($newContainer);\n        });\n    }\n\n    /**\n     * Trigger resize callback.\n     */\n    public resize(): void {\n        this._onResizeBind();\n    }\n\n    /**\n     * Trigger scroll to callback.\n     */\n    public scrollTo(\n        target: lenisTargetScrollTo,\n        options?: ILenisScrollToOptions\n    ): void {\n        this.lenisInstance?.scrollTo(target, {\n            offset: options?.offset,\n            lerp: options?.lerp,\n            duration: options?.duration,\n            immediate: options?.immediate,\n            lock: options?.lock,\n            force: options?.force,\n            easing: options?.easing,\n            onComplete: options?.onComplete,\n        });\n    }\n\n    /**\n     * RequestAnimationFrame that active Lenis smooth and scroll progress.\n     *\n     * @private\n     *\n     */\n    private _raf() {\n        this._onRenderBind();\n        this.rafInstance = requestAnimationFrame(() => this._raf());\n    }\n}\n"],"names":["IO","_ref","scrollElements","_ref$rootMargin","rootMargin","IORaf","observer","_init","_proto","prototype","_this","observerOptions","onIntersect","entries","forEach","entry","$targetItem","find","item","$el","target","isIntersecting","isAlreadyIntersected","_setInview","_setOutOfView","IntersectionObserver","_iterator","_createForOfIteratorHelperLoose","_step","done","scrollElement","value","$scrollElement","observe","destroy","disconnect","unobserve","setInteractivityOn","setInview","setInteractivityOff","setOutOfView","attributes","scrollRepeat","clamp","min","max","mapRange","inMin","inMax","outMin","outMax","inRange","outRange","normalize","closestNumber","array","reduce","prev","curr","Math","abs","INVIEW_CLASS","PROGRESS_CSS_VAR","PROGRESS_MODULAR_METHOD","ScrollElement","_this$$el$dataset$scr","_this$$el$dataset$scr2","_this$$el$dataset$scr3","_this$$el$dataset$scr4","_this$$el$dataset$scr5","id","modularInstance","subscribeElementUpdateFn","unsubscribeElementUpdateFn","needRaf","scrollOrientation","intersection","metrics","currentScroll","translateValue","progress","lastProgress","progressModularModules","isInview","isInteractive","isInFold","isFirstResize","scrollClass","dataset","scrollOffset","scrollPosition","scrollModuleProgress","scrollCssProgress","scrollEventProgress","scrollSpeed","parseFloat","scrollCall","scrollCallSelf","scrollIgnoreFold","scrollEnableTouchSpeed","start","end","offsetStart","offsetEnd","bcr","window","scrollY","scrollX","_getProgressModularModules","_resize","onResize","_ref2","onRender","_ref3","smooth","wSize","innerHeight","innerWidth","_computeProgress","isNaN","style","transform","classList","add","way","from","_getScrollCallFrom","_dispatchCall","remove","getBoundingClientRect","_computeMetrics","_computeIntersection","_this$metrics$bcr","top","left","height","width","metricsStart","metricsSize","offset","split","undefined","trim","scrollPositionStart","scrollPositionEnd","viewportStart","includes","parseInt","replace","viewportEnd","forcedProgress","_setCssProgress","_setCustomEventProgress","modularModules","call","moduleName","moduleId","currentProgress","setProperty","toString","customEventName","customEvent","CustomEvent","detail","dispatchEvent","modulesIdNames","Object","keys","filter","key","modules","length","_iterator2","_step2","modulesIdName","_iterator3","_step3","module","moduleObj","push","closestIntersectionValue","_this$attributes$scro","_this$attributes","callParameters","callSelf","_targetModuleId","func","targetModuleId","ATTRIBUTES_THAT_NEED_RAF","TRIGGER_ROOT_MARGIN","RAF_ROOT_MARGIN","Core","triggerRootMargin","rafRootMargin","$scrollContainer","triggeredScrollElements","RAFScrollElements","scrollElementsToUpdate","IOTriggerInstance","IORafInstance","console","error","$scrollElements","querySelectorAll","$scrollElementsArr","Array","_subscribeScrollElements","concat","_unsubscribeAllScrollElements","removeScrollElements","$oldContainer","$scrollElementsToRemove","index","$scrollElementsToRemoveArr","indexOf","splice","targetScrollElementToUpdate","targetScrollElement","_unsubscribeElementUpdate","scrollElementItem","addScrollElements","$newContainer","ids","maxID","apply","fromIndex","toObserve","_checkRafNeeded","scrollElementInstance","_subscribeElementUpdate","bind","scrollElementToUpdate","attributesThatNeedRaf","removeAttribute","attributeToRemove","attribute","map","test","join","RO","resizeElements","_ref$resizeCallback","resizeCallback","$resizeElements","isFirstObserve","ResizeObserver","$resizeElement","defaultLenisOptions","wrapper","content","document","documentElement","lerp","duration","orientation","gestureOrientation","smoothWheel","smoothTouch","wheelMultiplier","touchMultiplier","normalizeWheel","easing","t","pow","LocomotiveScroll","_temp","_ref$lenisOptions","lenisOptions","_ref$autoResize","autoResize","_ref$autoStart","autoStart","_ref$scrollCallback","scrollCallback","initCustomTicker","destroyCustomTicker","rafPlaying","lenisInstance","coreInstance","rafInstance","ROInstance","_onRenderBind","_onResizeBind","_onScrollToBind","_extends","assign","_onRender","_onScrollTo","_onResize","_this$lenisInstance","Lenis","on","setAttribute","options","requestAnimationFrame","rootElement","_bindEvents","warn","stop","_unbindEvents","_bindScrollToEvents","body","addEventListener","_unbindScrollToEvents","removeEventListener","$container","_this2","$rootContainer","$scrollToElements","_this3","_this4","_this4$coreInstance","scroll","_this$lenisInstance2","_this$coreInstance","raf","Date","now","isSmooth","event","_event$currentTarget","preventDefault","$target","currentTarget","getAttribute","scrollTo","_raf","cancelAnimationFrame","_this$coreInstance2","_this$coreInstance3","_this5","resize","_this$lenisInstance3","immediate","lock","force","onComplete","_this6"],"mappings":"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"}