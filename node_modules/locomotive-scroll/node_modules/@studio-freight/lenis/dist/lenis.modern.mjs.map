{"version":3,"file":"lenis.modern.mjs","sources":["../src/maths.js","../src/animate.js","../src/debounce.js","../src/dimensions.js","../src/nanoevents.js","../src/virtual-scroll.js","../src/index.js"],"sourcesContent":["// Clamp a value between a minimum and maximum value\nexport function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\n// Truncate a floating-point number to a specified number of decimal places\nexport function truncate(value, decimals = 0) {\n  return parseFloat(value.toFixed(decimals))\n}\n\n// Linearly interpolate between two values using an amount (0 <= amt <= 1)\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\nexport function clampedModulo(dividend, divisor) {\n  let remainder = dividend % divisor\n\n  // If the remainder and divisor have different signs, adjust the remainder\n  if ((divisor > 0 && remainder < 0) || (divisor < 0 && remainder > 0)) {\n    remainder += divisor\n  }\n\n  return remainder\n}\n","import { clamp, lerp } from './maths'\n\n// Animate class to handle value animations with lerping or easing\nexport class Animate {\n  // Advance the animation by the given delta time\n  advance(deltaTime) {\n    if (!this.isRunning) return\n\n    let completed = false\n\n    if (this.lerp) {\n      this.value = lerp(this.value, this.to, this.lerp)\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to\n        completed = true\n      }\n    } else {\n      this.currentTime += deltaTime\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\n\n      completed = linearProgress >= 1\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\n      this.value = this.from + (this.to - this.from) * easedProgress\n    }\n\n    // Call the onUpdate callback with the current value and completed status\n    this.onUpdate?.(this.value, { completed })\n\n    if (completed) {\n      this.stop()\n    }\n  }\n\n  // Stop the animation\n  stop() {\n    this.isRunning = false\n  }\n\n  // Set up the animation from a starting value to an ending value\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\n    this.from = this.value = from\n    this.to = to\n    this.lerp = lerp\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n\n    this.onUpdate = onUpdate\n  }\n}\n","export function debounce(callback, delay) {\n  let timer\n  return function () {\n    let args = arguments\n    let context = this\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      callback.apply(context, args)\n    }, delay)\n  }\n}\n","import { debounce } from './debounce'\n\nexport class Dimensions {\n  constructor(wrapper, content) {\n    this.wrapper = wrapper\n    this.content = content\n\n    if (this.wrapper === window) {\n      window.addEventListener('resize', this.onWindowResize, false)\n      this.onWindowResize()\n    } else {\n      this.wrapperResizeObserver = new ResizeObserver(\n        debounce(this.onWrapperResize, 100)\n      )\n      this.wrapperResizeObserver.observe(this.wrapper)\n      this.onWrapperResize()\n    }\n\n    this.contentResizeObserver = new ResizeObserver(\n      debounce(this.onContentResize, 100)\n    )\n    this.contentResizeObserver.observe(this.content)\n    this.onContentResize()\n  }\n\n  onWindowResize = () => {\n    this.width = window.innerWidth\n    this.height = window.innerHeight\n  }\n\n  destroy() {\n    window.removeEventListener('resize', this.onWindowResize, false)\n\n    this.wrapperResizeObserver?.disconnect()\n    this.contentResizeObserver?.disconnect()\n  }\n\n  onWrapperResize = () => {\n    this.width = this.wrapper.clientWidth\n    this.height = this.wrapper.clientHeight\n  }\n\n  onContentResize = () => {\n    const element =\n      this.wrapper === window ? document.documentElement : this.wrapper\n    this.scrollHeight = element.scrollHeight\n    this.scrollWidth = element.scrollWidth\n  }\n\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height,\n    }\n  }\n}\n","export let createNanoEvents = () => ({\n  events: {},\n\n  // Emit an event with the provided arguments\n  emit(event, ...args) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i](...args)\n    }\n  },\n\n  // Register a callback for the specified event\n  on(event, cb) {\n    // Add the callback to the event's callback list, or create a new list with the callback\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n\n    // Return an unsubscribe function\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\n    }\n  },\n})\n","import { clamp } from './maths'\nimport { createNanoEvents } from './nanoevents'\n\nexport class VirtualScroll {\n  constructor(\n    element,\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\n  ) {\n    this.element = element\n    this.wheelMultiplier = wheelMultiplier\n    this.touchMultiplier = touchMultiplier\n    this.normalizeWheel = normalizeWheel\n\n    this.touchStart = {\n      x: null,\n      y: null,\n    }\n\n    this.emitter = createNanoEvents()\n\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\n    this.element.addEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.addEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.addEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Add an event listener for the given event and callback\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  // Remove all event listeners and clean up\n  destroy() {\n    this.emitter.events = {}\n\n    this.element.removeEventListener('wheel', this.onWheel, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Event handler for 'touchstart' event\n  onTouchStart = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: 0,\n      y: 0,\n    }\n  }\n\n  // Event handler for 'touchmove' event\n  onTouchMove = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: deltaX,\n      y: deltaY,\n    }\n\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      deltaX,\n      deltaY,\n      event,\n    })\n  }\n\n  onTouchEnd = (event) => {\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      inertia: true,\n      deltaX: this.lastDelta.x,\n      deltaY: this.lastDelta.y,\n      event,\n    })\n  }\n\n  // Event handler for 'wheel' event\n  onWheel = (event) => {\n    let { deltaX, deltaY } = event\n\n    if (this.normalizeWheel) {\n      deltaX = clamp(-100, deltaX, 100)\n      deltaY = clamp(-100, deltaY, 100)\n    }\n\n    deltaX *= this.wheelMultiplier\n    deltaY *= this.wheelMultiplier\n\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\n  }\n}\n","import { version } from '../package.json'\nimport { Animate } from './animate'\nimport { Dimensions } from './dimensions'\nimport { clamp, clampedModulo } from './maths'\nimport { createNanoEvents } from './nanoevents'\nimport { VirtualScroll } from './virtual-scroll'\n\n// Technical explaination\n// - listen to 'wheel' events\n// - prevent 'wheel' event to prevent scroll\n// - normalize wheel delta\n// - add delta to targetScroll\n// - animate scroll to targetScroll (smooth context)\n// - if animation is not running, listen to 'scroll' events (native context)\n\nexport default class Lenis {\n  // isScrolling = true when scroll is animating\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\n  // isSmooth = true if scroll should be animated\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\n\n  /**\n   * @typedef {(t: number) => number} EasingFunction\n   * @typedef {'vertical' | 'horizontal'} Orientation\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\n   *\n   * @typedef LenisOptions\n   * @property {Orientation} [direction]\n   * @property {GestureOrientation} [gestureDirection]\n   * @property {number} [mouseMultiplier]\n   * @property {boolean} [smooth]\n   *\n   * @property {Window | HTMLElement} [wrapper]\n   * @property {HTMLElement} [content]\n   * @property {Window | HTMLElement} [wheelEventsTarget]\n   * @property {boolean} [smoothWheel]\n   * @property {boolean} [smoothTouch]\n   * @property {boolean} [syncTouch]\n   * @property {number} [syncTouchLerp]\n   * @property {number} [touchInertiaMultiplier]\n   * @property {number} [duration]\n   * @property {EasingFunction} [easing]\n   * @property {number} [lerp]\n   * @property {boolean} [infinite]\n   * @property {Orientation} [orientation]\n   * @property {GestureOrientation} [gestureOrientation]\n   * @property {number} [touchMultiplier]\n   * @property {number} [wheelMultiplier]\n   * @property {boolean} [normalizeWheel]\n   *\n   * @param {LenisOptions}\n   */\n  constructor({\n    //--legacy options--//\n    direction,\n    gestureDirection,\n    mouseMultiplier,\n    smooth,\n    //--legacy options--//\n    wrapper = window,\n    content = document.documentElement,\n    wheelEventsTarget = wrapper,\n    smoothWheel = smooth ?? true,\n    smoothTouch = false,\n    syncTouch = false,\n    syncTouchLerp = 0.1,\n    touchInertiaMultiplier = 35,\n    duration, // in seconds\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    lerp = duration ? null : 0.1,\n    infinite = false,\n    orientation = direction ?? 'vertical', // vertical, horizontal\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = mouseMultiplier ?? 1,\n    normalizeWheel = false,\n  } = {}) {\n    // warn about legacy options\n    if (direction) {\n      console.warn(\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\n      )\n    }\n    if (gestureDirection) {\n      console.warn(\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\n      )\n    }\n    if (mouseMultiplier) {\n      console.warn(\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\n      )\n    }\n    if (smooth) {\n      console.warn(\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\n      )\n    }\n\n    window.lenisVersion = version\n\n    // if wrapper is html or body, fallback to window\n    if (wrapper === document.documentElement || wrapper === document.body) {\n      wrapper = window\n    }\n\n    this.options = {\n      wrapper,\n      content,\n      wheelEventsTarget,\n      smoothWheel,\n      smoothTouch,\n      syncTouch,\n      syncTouchLerp,\n      touchInertiaMultiplier,\n      duration,\n      easing,\n      lerp,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    }\n\n    this.dimensions = new Dimensions(wrapper, content)\n    this.rootElement.classList.add('lenis')\n\n    this.velocity = 0\n    this.isStopped = false\n    this.isSmooth = smoothWheel || smoothTouch\n    this.isScrolling = false\n    this.targetScroll = this.animatedScroll = this.actualScroll\n    this.animate = new Animate()\n    this.emitter = createNanoEvents()\n\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    })\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\n  }\n\n  destroy() {\n    this.emitter.events = {}\n\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll.destroy()\n  }\n\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  off(event, callback) {\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\n      (i) => callback !== i\n    )\n  }\n\n  setScroll(scroll) {\n    // apply scroll value immediately\n    if (this.isHorizontal) {\n      this.rootElement.scrollLeft = scroll\n    } else {\n      this.rootElement.scrollTop = scroll\n    }\n  }\n\n  onVirtualScroll = ({ type, inertia, deltaX, deltaY, event }) => {\n    // keep zoom feature\n    if (event.ctrlKey) return\n\n    const isTouch = type === 'touch'\n    const isWheel = type === 'wheel'\n\n    if (\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\n      (isTouch &&\n        this.options.gestureOrientation === 'vertical' &&\n        this.scroll === 0 &&\n        !this.options.infinite &&\n        deltaY <= 0) // touch pull to refresh\n    )\n      return\n\n    // catch if scrolling on nested scroll elements\n    if (\n      !!event\n        .composedPath()\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\n    )\n      return\n\n    if (this.isStopped || this.isLocked) {\n      event.preventDefault()\n      return\n    }\n\n    this.isSmooth =\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\n      (this.options.smoothWheel && isWheel)\n\n    if (!this.isSmooth) {\n      this.isScrolling = false\n      this.animate.stop()\n      return\n    }\n\n    event.preventDefault()\n\n    let delta = deltaY\n    if (this.options.gestureOrientation === 'both') {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\n    } else if (this.options.gestureOrientation === 'horizontal') {\n      delta = deltaX\n    }\n\n    const syncTouch = isTouch && this.options.syncTouch\n    const hasTouchInertia = isTouch && inertia && Math.abs(delta) > 1\n    if (hasTouchInertia) {\n      delta = this.velocity * this.options.touchInertiaMultiplier\n    }\n\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...(syncTouch && {\n        lerp: hasTouchInertia ? this.syncTouchLerp : 0.4, // should be 1 but had to leave 0.4 for iOS.....\n      }),\n    })\n  }\n\n  emit() {\n    this.emitter.emit('scroll', this)\n  }\n\n  onScroll = () => {\n    if (!this.isScrolling) {\n      const lastScroll = this.animatedScroll\n      this.animatedScroll = this.targetScroll = this.actualScroll\n      this.velocity = 0\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\n      this.emit()\n    }\n  }\n\n  reset() {\n    this.isLocked = false\n    this.isScrolling = false\n    this.velocity = 0\n    this.animate.stop()\n  }\n\n  start() {\n    this.isStopped = false\n\n    this.reset()\n  }\n\n  stop() {\n    this.isStopped = true\n    this.animate.stop()\n\n    this.reset()\n  }\n\n  raf(time) {\n    const deltaTime = time - (this.time || time)\n    this.time = time\n\n    this.animate.advance(deltaTime * 0.001)\n  }\n\n  scrollTo(\n    target,\n    {\n      offset = 0,\n      immediate = false,\n      lock = false,\n      duration = this.options.duration,\n      easing = this.options.easing,\n      lerp = !duration && this.options.lerp,\n      onComplete = null,\n      force = false, // scroll even if stopped\n      programmatic = true, // called from outside of the class\n    } = {}\n  ) {\n    if (this.isStopped && !force) return\n\n    // keywords\n    if (['top', 'left', 'start'].includes(target)) {\n      target = 0\n    } else if (['bottom', 'right', 'end'].includes(target)) {\n      target = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      }\n\n      if (node) {\n        if (this.options.wrapper !== window) {\n          // nested scroll offset correction\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\n        }\n\n        const rect = node.getBoundingClientRect()\n\n        target =\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\n      }\n    }\n\n    if (typeof target !== 'number') return\n\n    target += offset\n    target = Math.round(target)\n\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll\n      }\n    } else {\n      target = clamp(0, target, this.limit)\n    }\n\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target\n      this.setScroll(this.scroll)\n      this.reset()\n      this.emit()\n      onComplete?.()\n      return\n    }\n\n    if (!programmatic) {\n      if (target === this.targetScroll) return\n\n      this.targetScroll = target\n    }\n\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp,\n      onUpdate: (value, { completed }) => {\n        // started\n        if (lock) this.isLocked = true\n        this.isScrolling = true\n\n        // updated\n        this.velocity = value - this.animatedScroll\n        this.direction = Math.sign(this.velocity)\n\n        this.animatedScroll = value\n        this.setScroll(this.scroll)\n\n        if (programmatic) {\n          // wheel during programmatic should stop it\n          this.targetScroll = value\n        }\n\n        // completed\n        if (completed) {\n          if (lock) this.isLocked = false\n          requestAnimationFrame(() => {\n            //avoid double scroll event\n            this.isScrolling = false\n          })\n          this.velocity = 0\n          onComplete?.()\n        }\n\n        this.emit()\n      },\n    })\n  }\n\n  get rootElement() {\n    return this.options.wrapper === window\n      ? this.options.content\n      : this.options.wrapper\n  }\n\n  get limit() {\n    return this.isHorizontal ? this.dimensions.limit.x : this.dimensions.limit.y\n  }\n\n  get isHorizontal() {\n    return this.options.orientation === 'horizontal'\n  }\n\n  get actualScroll() {\n    // value browser takes into account\n    return this.isHorizontal\n      ? this.rootElement.scrollLeft\n      : this.rootElement.scrollTop\n  }\n\n  get scroll() {\n    return this.options.infinite\n      ? clampedModulo(this.animatedScroll, this.limit)\n      : this.animatedScroll\n  }\n\n  get progress() {\n    // avoid progress to be NaN\n    return this.limit === 0 ? 1 : this.scroll / this.limit\n  }\n\n  get isSmooth() {\n    return this.__isSmooth\n  }\n\n  set isSmooth(value) {\n    if (this.__isSmooth !== value) {\n      this.rootElement.classList.toggle('lenis-smooth', value)\n      this.__isSmooth = value\n    }\n  }\n\n  get isScrolling() {\n    return this.__isScrolling\n  }\n\n  set isScrolling(value) {\n    if (this.__isScrolling !== value) {\n      this.rootElement.classList.toggle('lenis-scrolling', value)\n      this.__isScrolling = value\n    }\n  }\n\n  get isStopped() {\n    return this.__isStopped\n  }\n\n  set isStopped(value) {\n    if (this.__isStopped !== value) {\n      this.rootElement.classList.toggle('lenis-stopped', value)\n      this.__isStopped = value\n    }\n  }\n}\n"],"names":["clamp","min","input","max","Math","Animate","advance","deltaTime","_this$onUpdate","this","isRunning","completed","lerp","value","amt","to","round","currentTime","linearProgress","duration","easedProgress","easing","from","onUpdate","call","stop","fromTo","t","debounce","callback","delay","timer","args","arguments","context","clearTimeout","setTimeout","apply","Dimensions","constructor","wrapper","content","onWindowResize","width","window","innerWidth","height","innerHeight","onWrapperResize","clientWidth","clientHeight","onContentResize","element","document","documentElement","scrollHeight","scrollWidth","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","_this$wrapperResizeOb","_this$contentResizeOb","removeEventListener","disconnect","limit","x","y","createNanoEvents","events","emit","event","callbacks","i","length","on","cb","_this$events$event","push","_this$events$event2","filter","VirtualScroll","wheelMultiplier","touchMultiplier","normalizeWheel","onTouchStart","clientX","clientY","targetTouches","touchStart","lastDelta","onTouchMove","deltaX","deltaY","emitter","type","onTouchEnd","inertia","onWheel","passive","Lenis","direction","gestureDirection","mouseMultiplier","smooth","wheelEventsTarget","smoothWheel","smoothTouch","syncTouch","syncTouchLerp","touchInertiaMultiplier","pow","infinite","orientation","gestureOrientation","onVirtualScroll","ctrlKey","isTouch","isWheel","options","scroll","composedPath","find","node","hasAttribute","isStopped","isLocked","preventDefault","isSmooth","isScrolling","animate","delta","abs","hasTouchInertia","velocity","scrollTo","targetScroll","_extends","programmatic","onScroll","lastScroll","animatedScroll","actualScroll","sign","console","warn","lenisVersion","body","dimensions","rootElement","classList","add","virtualScroll","off","_this$emitter$events$","setScroll","isHorizontal","scrollLeft","scrollTop","reset","start","raf","time","target","offset","immediate","lock","onComplete","force","includes","_target","querySelector","nodeType","wrapperRect","getBoundingClientRect","left","top","rect","requestAnimationFrame","dividend","divisor","remainder","clampedModulo","progress","__isSmooth","toggle","__isScrolling","__isStopped"],"mappings":"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"}